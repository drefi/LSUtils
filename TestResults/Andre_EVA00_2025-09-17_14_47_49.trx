<?xml version="1.0" encoding="utf-8"?>
<TestRun id="96733157-8337-45d6-b3da-93df96bfdaab" name="Andre@EVA00 2025-09-17 14:47:49" runUser="EVA00\Andre" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2025-09-17T14:47:49.7951503-03:00" queuing="2025-09-17T14:47:49.7951507-03:00" start="2025-09-17T14:47:48.5964999-03:00" finish="2025-09-17T14:47:49.8699568-03:00" />
  <TestSettings name="default" id="eaf89ee1-7765-43c1-b44e-293a4647363b">
    <Deployment runDeploymentRoot="Andre_EVA00_2025-09-17_14_47_49" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="2ff9d664-addf-4abe-b900-6cc0c39f5271" testId="bc3e19fe-1115-8b55-6559-057d96f323b5" testName="TestUserRegistrationEvent" computerName="EVA00" duration="00:00:00.0002440" startTime="2025-09-17T14:47:49.7014933-03:00" endTime="2025-09-17T14:47:49.7017374-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2ff9d664-addf-4abe-b900-6cc0c39f5271" />
    <UnitTestResult executionId="ffb99688-12c0-41c8-ad36-a3569c55e5df" testId="9a214682-8af3-eeab-92f0-cce86781cbc9" testName="TestBuilderBasicSelector" computerName="EVA00" duration="00:00:00.0022590" startTime="2025-09-17T14:47:49.7382619-03:00" endTime="2025-09-17T14:47:49.7405213-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ffb99688-12c0-41c8-ad36-a3569c55e5df" />
    <UnitTestResult executionId="002c2c30-c04c-4106-8cbf-833460251f4f" testId="c15f362e-12b9-20b1-e826-6d4af9cf7b8c" testName="TestMergeWithoutCurrentNode" computerName="EVA00" duration="00:00:00.0025920" startTime="2025-09-17T14:47:49.7648614-03:00" endTime="2025-09-17T14:47:49.7674535-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="002c2c30-c04c-4106-8cbf-833460251f4f">
      <Output>
        <ErrorInfo>
          <Message>LSUtils.LSException : No current node to build. Make sure to end all layers.</Message>
          <StackTrace>   at LSUtils.EventSystem.LSEventContextBuilder.Build() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventContextBuilder.cs:line 241&#xD;
   at LSUtils.EventSystem.TestV5.LSEventSystemTestsV5.TestMergeWithoutCurrentNode() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventSystem_v5_tests.cs:line 450&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="567937a0-929f-4dd9-a162-3cd42b6cef57" testId="e78bc9b7-e63f-4761-fcbd-f5cec6e2cb67" testName="TestUserRegistrationWithGlobalAndEventScopedHandlers" computerName="EVA00" duration="00:00:00.0039560" startTime="2025-09-17T14:47:49.7085868-03:00" endTime="2025-09-17T14:47:49.7125424-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="567937a0-929f-4dd9-a162-3cd42b6cef57">
      <Output>
        <StdOut>User created.&#xD;
EVENT-SCOPED ValidatePhase handler executed.&#xD;
GLOBAL ValidatePhase handler executed.&#xD;
EVENT-SCOPED ConfigurePhase handler executed.&#xD;
GLOBAL ConfigurePhase handler executed.&#xD;
EVENT-SCOPED ExecutePhase handler executed.&#xD;
GLOBAL ExecutePhase handler executed.&#xD;
EVENT-SCOPED CleanupPhase handler executed.&#xD;
GLOBAL CleanupPhase handler executed.&#xD;
User registration event with both global and event-scoped handlers dispatched.&#xD;
Handlers executed in order: EVENT_ValidatePhase, GLOBAL_ValidatePhase, EVENT_ConfigurePhase, GLOBAL_ConfigurePhase, EVENT_ExecutePhase, GLOBAL_ExecutePhase, EVENT_CleanupPhase, GLOBAL_CleanupPhase&#xD;
Test completed - both global and event-scoped handlers worked together</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="507459e2-61ff-49b3-b91a-a5934ae7971f" testId="8df863f7-106e-a0cc-68d6-8c1b218672de" testName="TestMergeNullContext" computerName="EVA00" duration="00:00:00.0016120" startTime="2025-09-17T14:47:49.7632322-03:00" endTime="2025-09-17T14:47:49.7648440-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="507459e2-61ff-49b3-b91a-a5934ae7971f" />
    <UnitTestResult executionId="9649e927-2d9c-41ae-b265-3f665cc59f03" testId="3bf2ba75-2137-7683-a1f6-61f019b64298" testName="TestWaitingValidateFailure" computerName="EVA00" duration="00:00:00.0020030" startTime="2025-09-17T14:47:49.7232590-03:00" endTime="2025-09-17T14:47:49.7252623-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9649e927-2d9c-41ae-b265-3f665cc59f03">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(result, Is.EqualTo(EventProcessResult.FAILURE))&#xD;
  Expected: FAILURE&#xD;
  But was:  SUCCESS&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingValidateFailure() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1004&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingValidateFailure() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1004&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6b2a6fa2-08e2-4547-aae0-871b086a079e" testId="78eb5c3b-21b8-1075-176f-da279c6b7d47" testName="TestRemoveNonExistentNode" computerName="EVA00" duration="00:00:00.0011170" startTime="2025-09-17T14:47:49.7686061-03:00" endTime="2025-09-17T14:47:49.7697232-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6b2a6fa2-08e2-4547-aae0-871b086a079e" />
    <UnitTestResult executionId="2dcc34b9-60d9-463a-b69d-ff83a8bc87ae" testId="8dc072b0-e1eb-b3cb-5750-66d1038684a6" testName="TestMixedGlobalAndEventScopedCancellation" computerName="EVA00" duration="00:00:00.0022870" startTime="2025-09-17T14:47:49.6890944-03:00" endTime="2025-09-17T14:47:49.6913813-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2dcc34b9-60d9-463a-b69d-ff83a8bc87ae">
      <Output>
        <StdOut>Mixed global/event-scoped cancellation flow: Global-ValidatePhase → EventScoped-ConfigurePhase → EventScoped-CancelledState → Global-CancelledState → EventScoped-CompletedState → Global-CompletedState&#xD;
Mixed global and event-scoped cancellation test completed - both handler types executed</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4726a370-ba33-4773-8415-f3cf4e44bb46" testId="735b64af-ca63-0bcc-4a1e-cf249ef1718f" testName="TestCleanupPhaseCancellationEventScoped" computerName="EVA00" duration="00:00:00.0040640" startTime="2025-09-17T14:47:49.6171711-03:00" endTime="2025-09-17T14:47:49.6212352-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4726a370-ba33-4773-8415-f3cf4e44bb46">
      <Output>
        <StdOut>CleanupPhase cancellation flow (event-scoped): BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
CleanupPhase cancellation test (event-scoped) completed - core phases succeeded, cleanup cancelled but still goes to SucceedState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f27be223-1bfc-4b53-83f6-7c01391feb46" testId="456c0c5d-6ac4-1d6b-6eb9-72316753626d" testName="TestWaitingBehaviorWithCancel" computerName="EVA00" duration="00:00:00.0023920" startTime="2025-09-17T14:47:49.7185124-03:00" endTime="2025-09-17T14:47:49.7209041-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f27be223-1bfc-4b53-83f6-7c01391feb46">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder[0], Is.EqualTo("Handler1_Waiting"))&#xD;
  Expected string length 16 but was 17. Strings differ at index 7.&#xD;
  Expected: "Handler1_Waiting"&#xD;
  But was:  "Handler2_Executed"&#xD;
  ------------------^&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingBehaviorWithCancel() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1590&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingBehaviorWithCancel() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1590&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="80bd2da7-3d89-4821-b8b5-1767c7878e76" testId="2adc1479-a6e0-39fb-afa7-ca0a917896f9" testName="TestDeepRecursiveMerge" computerName="EVA00" duration="00:00:00.0012890" startTime="2025-09-17T14:47:49.7572413-03:00" endTime="2025-09-17T14:47:49.7585306-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="80bd2da7-3d89-4821-b8b5-1767c7878e76" />
    <UnitTestResult executionId="66a2fe23-96eb-42dc-ae6b-1a5ee293725f" testId="8c9812ca-7a53-2e36-f657-c2d157592732" testName="TestBuilderWithContext" computerName="EVA00" duration="00:00:00.0008790" startTime="2025-09-17T14:47:49.7537758-03:00" endTime="2025-09-17T14:47:49.7546549-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="66a2fe23-96eb-42dc-ae6b-1a5ee293725f" />
    <UnitTestResult executionId="296f36c0-cb96-45af-9869-add2acd5b8b0" testId="5f51b311-9af7-a8e2-3164-d3c1c249f2f7" testName="TestConfigurePhaseSequentialWaiting" computerName="EVA00" duration="00:00:00.0042839" startTime="2025-09-17T14:47:49.6662147-03:00" endTime="2025-09-17T14:47:49.6704988-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="296f36c0-cb96-45af-9869-add2acd5b8b0">
      <Output>
        <StdOut>[ConfigurePhase] Handler returned WAITING, _waitingHandlers before increment: 0&#xD;
[ConfigurePhase] _waitingHandlers after increment: 1&#xD;
[ConfigurePhase] Entering WAITING state</StdOut>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder.Count, Is.EqualTo(1))&#xD;
  Expected: 1&#xD;
  But was:  2&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestConfigurePhaseSequentialWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1339&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestConfigurePhaseSequentialWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1339&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="95734a93-e036-4d5a-957d-14cfd7beee3f" testId="3acc0d28-b75f-7d08-aae6-3d20d3141069" testName="TestCompletedStateHandlers" computerName="EVA00" duration="00:00:00.0014760" startTime="2025-09-17T14:47:49.6624520-03:00" endTime="2025-09-17T14:47:49.6639284-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="95734a93-e036-4d5a-957d-14cfd7beee3f">
      <Output>
        <StdOut>Business phase handler executed.&#xD;
SucceedState handler executed.&#xD;
CompletedState handler executed.&#xD;
CompletedState test completed - completion handlers executed as final step</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="07e4c558-b372-49c0-aec3-254992338160" testId="a41408ab-7edf-d9b7-1677-9198f172d9ef" testName="TestUserRegistrationForEventWithGlobalPhaseHandler" computerName="EVA00" duration="00:00:00.0017780" startTime="2025-09-17T14:47:49.7067969-03:00" endTime="2025-09-17T14:47:49.7085753-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="07e4c558-b372-49c0-aec3-254992338160">
      <Output>
        <StdOut>User created.&#xD;
ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
User registration event dispatched.&#xD;
ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
Another user registration event dispatched.&#xD;
Test completed</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d18659be-a0eb-482d-936b-eaea47096584" testId="840e3fd5-73f9-fa17-34c6-710f5dcbc729" testName="TestUserInitialization" computerName="EVA00" duration="00:00:00.0006830" startTime="2025-09-17T14:47:49.7007963-03:00" endTime="2025-09-17T14:47:49.7014787-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d18659be-a0eb-482d-936b-eaea47096584" />
    <UnitTestResult executionId="51b9d82f-e755-4697-835a-e1e5f8c67479" testId="0884c81d-70a4-0702-1114-6a3eca2c2e7d" testName="TestValidatePhaseWaitingCausesFailure" computerName="EVA00" duration="00:00:00.0017780" startTime="2025-09-17T14:47:49.7167195-03:00" endTime="2025-09-17T14:47:49.7184977-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="51b9d82f-e755-4697-835a-e1e5f8c67479">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(result, Is.EqualTo(EventProcessResult.FAILURE))&#xD;
  Expected: FAILURE&#xD;
  But was:  SUCCESS&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestValidatePhaseWaitingCausesFailure() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1258&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestValidatePhaseWaitingCausesFailure() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1258&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e6d8f598-84e6-469c-9bcf-401ed8464094" testId="568773c1-35a4-921a-7508-a2bd76c88ad5" testName="TestStateTransitionFlow" computerName="EVA00" duration="00:00:00.0026260" startTime="2025-09-17T14:47:49.6968569-03:00" endTime="2025-09-17T14:47:49.6994824-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e6d8f598-84e6-469c-9bcf-401ed8464094">
      <Output>
        <StdOut>BusinessState-Validate executed&#xD;
BusinessState-Execute executed&#xD;
SucceedState executed&#xD;
CompletedState executed&#xD;
Full state flow: BusinessState-Validate → BusinessState-Execute → SucceedState → CompletedState&#xD;
BusinessState index: 0, SucceedState index: 2, CompletedState index: 3&#xD;
State transition flow: BusinessState-Validate → BusinessState-Execute → SucceedState → CompletedState&#xD;
State transition test completed - correct flow verified</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="419fe50b-7566-49f2-802d-c5ee6e82b4e8" testId="ed3d8703-6cf5-a3e7-978b-5fd79aa4d062" testName="TestBusinessStateProcessing" computerName="EVA00" duration="00:00:00.0461160" startTime="2025-09-17T14:47:49.5372721-03:00" endTime="2025-09-17T14:47:49.5832996-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="419fe50b-7566-49f2-802d-c5ee6e82b4e8">
      <Output>
        <StdOut>BusinessState - ValidatePhase executed.&#xD;
BusinessState - ConfigurePhase executed.&#xD;
BusinessState - ExecutePhase executed.&#xD;
BusinessState - CleanupPhase executed.&#xD;
BusinessState test completed - all phases executed in correct order</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="08542b55-ee97-410c-bda4-720a505aa20a" testId="d1c3599f-a00b-2ee4-a24b-9b1b1abcec53" testName="TestWaitingBehaviorWithFail" computerName="EVA00" duration="00:00:00.0023300" startTime="2025-09-17T14:47:49.7209168-03:00" endTime="2025-09-17T14:47:49.7232470-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="08542b55-ee97-410c-bda4-720a505aa20a">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder[0], Is.EqualTo("Handler1_Waiting"))&#xD;
  Expected string length 16 but was 17. Strings differ at index 7.&#xD;
  Expected: "Handler1_Waiting"&#xD;
  But was:  "Handler2_Executed"&#xD;
  ------------------^&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingBehaviorWithFail() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1647&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingBehaviorWithFail() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1647&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c7a9a454-3529-4bda-b48b-0d7108a5bb8d" testId="4857dd68-607d-7f8e-9527-6869379fbefa" testName="TestSucceedStateHandlers" computerName="EVA00" duration="00:00:00.0010010" startTime="2025-09-17T14:47:49.6994973-03:00" endTime="2025-09-17T14:47:49.7004977-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c7a9a454-3529-4bda-b48b-0d7108a5bb8d">
      <Output>
        <StdOut>Business phase handler executed.&#xD;
SucceedState handler executed.&#xD;
SucceedState test completed - success handlers executed after business phases</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e6ff6339-9475-4404-a5f9-965dcd3b72df" testId="81a6a250-9cf2-f8fa-9aaa-63e8ddcff113" testName="TestUserCreation" computerName="EVA00" duration="00:00:00.0002530" startTime="2025-09-17T14:47:49.7005084-03:00" endTime="2025-09-17T14:47:49.7007617-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e6ff6339-9475-4404-a5f9-965dcd3b72df" />
    <UnitTestResult executionId="07628894-0982-481d-a39a-073f188c0eb3" testId="a4dbf1e2-be50-f782-4272-afbc0816679f" testName="TestMixedNodeTypeMerge" computerName="EVA00" duration="00:00:00.0010529" startTime="2025-09-17T14:47:49.7675338-03:00" endTime="2025-09-17T14:47:49.7685871-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="07628894-0982-481d-a39a-073f188c0eb3" />
    <UnitTestResult executionId="2db91893-c261-4a66-a00c-3a5ec99e12e5" testId="0ba7ced5-bd74-a29e-fc6b-7c8b96298ea6" testName="TestMergeNonConflictingNodes" computerName="EVA00" duration="00:00:00.0017740" startTime="2025-09-17T14:47:49.7614391-03:00" endTime="2025-09-17T14:47:49.7632132-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2db91893-c261-4a66-a00c-3a5ec99e12e5">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(root, Is.Not.Null)&#xD;
  Expected: not null&#xD;
  But was:  null&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.TestV5.LSEventSystemTestsV5.TestMergeNonConflictingNodes() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventSystem_v5_tests.cs:line 265&#xD;

1)    at LSUtils.EventSystem.TestV5.LSEventSystemTestsV5.TestMergeNonConflictingNodes() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventSystem_v5_tests.cs:line 265&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a3f504a1-e021-4f67-abbd-c5177a239a0e" testId="20a8d501-604a-4346-0163-a2c3d0cec3cd" testName="TestCancellationStateTransitionFlow" computerName="EVA00" duration="00:00:00.0221060" startTime="2025-09-17T14:47:49.5901807-03:00" endTime="2025-09-17T14:47:49.6122860-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a3f504a1-e021-4f67-abbd-c5177a239a0e">
      <Output>
        <StdOut>Cancellation state flow: BusinessState-Validate → CancelledState → CompletedState&#xD;
Cancellation state transition test completed - correct flow verified</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="44d15263-ea91-4925-be34-a83483c4f1fe" testId="153986f3-0ca3-73e8-62d7-f701648188ef" testName="TestConfigurePhaseCancellation" computerName="EVA00" duration="00:00:00.0022570" startTime="2025-09-17T14:47:49.6639435-03:00" endTime="2025-09-17T14:47:49.6662001-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="44d15263-ea91-4925-be34-a83483c4f1fe">
      <Output>
        <StdOut>ConfigurePhase cancellation flow: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
ConfigurePhase cancellation test completed - direct transition to CancelledState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5dd4d3ec-9951-424a-a7ef-6c0fe72e3756" testId="cd6ad22a-ddc8-bc45-9606-3cec679a381f" testName="TestValidatePhaseCancellation" computerName="EVA00" duration="00:00:00.0021030" startTime="2025-09-17T14:47:49.7125568-03:00" endTime="2025-09-17T14:47:49.7146592-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5dd4d3ec-9951-424a-a7ef-6c0fe72e3756">
      <Output>
        <StdOut>ValidatePhase cancellation flow: BusinessState-Validate → CancelledState → CompletedState&#xD;
ValidatePhase cancellation test completed - direct transition to CancelledState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="34daa8a2-e2e0-4632-966a-2e803b73f310" testId="be96645d-9b41-d8c5-a5db-1a2ccfa572d3" testName="TestExecutePhaseMultipleParallelWaiting" computerName="EVA00" duration="00:00:00.0034830" startTime="2025-09-17T14:47:49.6776673-03:00" endTime="2025-09-17T14:47:49.6811498-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="34daa8a2-e2e0-4632-966a-2e803b73f310">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder[0], Is.EqualTo("Handler1_Waiting"))&#xD;
  String lengths are both 16. Strings differ at index 7.&#xD;
  Expected: "Handler1_Waiting"&#xD;
  But was:  "Handler3_Waiting"&#xD;
  ------------------^&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseMultipleParallelWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1490&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseMultipleParallelWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1490&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9a48bcb5-9aa6-422b-988c-f9c79b402c33" testId="fbd3a990-6fa3-28ac-e959-ae600b2326f7" testName="TestExecutePhaseParallelWaiting" computerName="EVA00" duration="00:00:00.0019970" startTime="2025-09-17T14:47:49.6811629-03:00" endTime="2025-09-17T14:47:49.6831601-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9a48bcb5-9aa6-422b-988c-f9c79b402c33">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder, Is.EqualTo(new[] { "Handler1_Waiting", "Handler2_Executed" }))&#xD;
  Expected is &lt;System.String[2]&gt;, actual is &lt;System.Collections.Generic.List`1[System.String]&gt; with 2 elements&#xD;
  Values differ at index [0]&#xD;
  Expected string length 16 but was 17. Strings differ at index 7.&#xD;
  Expected: &lt; "Handler1_Waiting", "Handler2_Executed" &gt;&#xD;
  But was:  &lt; "Handler2_Executed", "Handler1_Waiting" &gt;&#xD;
  First non-matching item at index [0]: "Handler1_Waiting"&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseParallelWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1435&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseParallelWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1435&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bc436d75-9643-4609-aba7-787541d1ecd9" testId="ef645ed0-dc55-40d0-80c9-d8a473694566" testName="TestExecutePhaseParallelWaiting_PseudoSequential" computerName="EVA00" duration="00:00:00.0042839" startTime="2025-09-17T14:47:49.6831741-03:00" endTime="2025-09-17T14:47:49.6874574-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bc436d75-9643-4609-aba7-787541d1ecd9">
      <Output>
        <StdOut>[BusinessState] Resume() called, _currentPhase: ExecutePhaseState&#xD;
[BusinessState] Calling Resume() on phase: ExecutePhaseState&#xD;
[BusinessState] Resume() returned: LSEventBusinessState, StateResult: WAITING</StdOut>
        <ErrorInfo>
          <Message>  Assert.That(result, Is.EqualTo(EventProcessResult.SUCCESS))&#xD;
  Expected: SUCCESS&#xD;
  But was:  WAITING&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseParallelWaiting_PseudoSequential() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1389&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseParallelWaiting_PseudoSequential() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1389&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1efe8037-f751-481e-91c8-5df4cb55e0c7" testId="5b1b400f-13b7-e800-1d98-5474afcd5fdf" testName="TestFailureStateTransitionFlow" computerName="EVA00" duration="00:00:00.0016060" startTime="2025-09-17T14:47:49.6874757-03:00" endTime="2025-09-17T14:47:49.6890819-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1efe8037-f751-481e-91c8-5df4cb55e0c7">
      <Output>
        <StdOut>Failure state flow: BusinessState-Validate → CompletedState&#xD;
Failure state transition test completed - ValidatePhase failure skips all remaining phases</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="47abb08a-ff80-4c44-b52c-93e10ed03422" testId="e3a074a6-0af1-e8d9-886d-5cdad1c2c783" testName="TestCleanupPhaseCancellation" computerName="EVA00" duration="00:00:00.0031410" startTime="2025-09-17T14:47:49.6140154-03:00" endTime="2025-09-17T14:47:49.6171567-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="47abb08a-ff80-4c44-b52c-93e10ed03422">
      <Output>
        <StdOut>CleanupPhase cancellation flow: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
CleanupPhase cancellation test completed - core phases succeeded, cleanup cancelled but still goes to SucceedState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2d1cc736-ef94-458c-9f39-6c579838a32d" testId="450a2d8a-9137-f52c-ce1c-1c6b766575a2" testName="TestBuilderNestedStructure" computerName="EVA00" duration="00:00:00.0030090" startTime="2025-09-17T14:47:49.7507417-03:00" endTime="2025-09-17T14:47:49.7537504-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2d1cc736-ef94-458c-9f39-6c579838a32d" />
    <UnitTestResult executionId="70be93c3-5bd4-4920-acaf-fb554300c091" testId="1215759f-148f-b0ce-aa3a-7f8159689cd3" testName="TestValidatePhaseCancellationEventScoped" computerName="EVA00" duration="00:00:00.0020300" startTime="2025-09-17T14:47:49.7146784-03:00" endTime="2025-09-17T14:47:49.7167085-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="70be93c3-5bd4-4920-acaf-fb554300c091">
      <Output>
        <StdOut>ValidatePhase cancellation flow (event-scoped): BusinessState-Validate → CancelledState → CompletedState&#xD;
ValidatePhase cancellation test (event-scoped) completed - direct transition to CancelledState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ca3eadab-62b9-430e-ba98-995dd4ced5ab" testId="dae26ae9-2d4f-e557-f9b8-a98b3e9079c3" testName="TestExecutePhaseCancellation" computerName="EVA00" duration="00:00:00.0024390" startTime="2025-09-17T14:47:49.6752153-03:00" endTime="2025-09-17T14:47:49.6776543-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ca3eadab-62b9-430e-ba98-995dd4ced5ab">
      <Output>
        <StdOut>ExecutePhase cancellation flow: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
ExecutePhase cancellation test completed - direct transition to CancelledState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="66ba0028-59cf-4a17-ae35-27a1d65d68b3" testId="d1f0120b-5502-9f65-49ed-f68406757428" testName="TestCleanupPhaseWaitingDoesNotAffectBusinessResult" computerName="EVA00" duration="00:00:00.0410930" startTime="2025-09-17T14:47:49.6212570-03:00" endTime="2025-09-17T14:47:49.6623493-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="66ba0028-59cf-4a17-ae35-27a1d65d68b3">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder, Is.EqualTo(new[] { "Validate_Success", "Execute_Success", "Cleanup_Waiting", "Cleanup_Success" }))&#xD;
  Expected is &lt;System.String[4]&gt;, actual is &lt;System.Collections.Generic.List`1[System.String]&gt; with 4 elements&#xD;
  Values differ at index [2]&#xD;
  String lengths are both 15. Strings differ at index 8.&#xD;
  Expected: &lt; "Validate_Success", "Execute_Success", "Cleanup_Waiting", "Cleanup_Success" &gt;&#xD;
  But was:  &lt; "Validate_Success", "Execute_Success", "Cleanup_Success", "Cleanup_Waiting" &gt;&#xD;
  First non-matching item at index [2]: "Cleanup_Waiting"&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestCleanupPhaseWaitingDoesNotAffectBusinessResult() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1546&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestCleanupPhaseWaitingDoesNotAffectBusinessResult() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1546&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c32f5d85-ff84-4368-96ac-1f6c0c0c2128" testId="842a23f3-23fb-d065-1b19-d30b3ae23942" testName="TestBuilderMergeIntoContext" computerName="EVA00" duration="00:00:00.0081520" startTime="2025-09-17T14:47:49.7425659-03:00" endTime="2025-09-17T14:47:49.7507180-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c32f5d85-ff84-4368-96ac-1f6c0c0c2128">
      <Output>
        <StdOut>Sub context: subContext&#xD;
Sub context children: handler1&#xD;
Root context before merge: root&#xD;
Root children before: &#xD;
Merged context: root&#xD;
Merged children: subContext</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c6be988c-2d75-42c5-9dc5-5591d5da3105" testId="b804ce67-e9a3-25cc-44e4-c4a2d9f41176" testName="TestConfigurePhaseSequentialWaiting_PseudoSequential" computerName="EVA00" duration="00:00:00.0046720" startTime="2025-09-17T14:47:49.6705278-03:00" endTime="2025-09-17T14:47:49.6751998-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c6be988c-2d75-42c5-9dc5-5591d5da3105">
      <Output>
        <StdOut>[BusinessState] Resume() called, _currentPhase: ConfigurePhaseState&#xD;
[BusinessState] Calling Resume() on phase: ConfigurePhaseState&#xD;
[ConfigurePhase] Resume() called, _waitingHandlers before decrement: 0&#xD;
[ConfigurePhase] _waitingHandlers after decrement: -1&#xD;
[ConfigurePhase] Still waiting for more handlers: -1&#xD;
[BusinessState] Resume() returned: LSEventBusinessState, StateResult: WAITING&#xD;
[ConfigurePhase] Handler returned WAITING, _waitingHandlers before increment: -1&#xD;
[ConfigurePhase] _waitingHandlers after increment: 0&#xD;
[ConfigurePhase] Pseudo-sequential detected, treating as SUCCESS and continuing</StdOut>
        <ErrorInfo>
          <Message>  Assert.That(result, Is.EqualTo(EventProcessResult.SUCCESS))&#xD;
  Expected: SUCCESS&#xD;
  But was:  WAITING&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestConfigurePhaseSequentialWaiting_PseudoSequential() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1298&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestConfigurePhaseSequentialWaiting_PseudoSequential() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1298&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ec701bc2-1079-417d-a1f3-6d0833d37e3f" testId="d9fa7fdb-e6df-80fb-a520-46e9ce214564" testName="TestComplexHierarchyMerge" computerName="EVA00" duration="00:00:00.0024800" startTime="2025-09-17T14:47:49.7546687-03:00" endTime="2025-09-17T14:47:49.7571488-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ec701bc2-1079-417d-a1f3-6d0833d37e3f" />
    <UnitTestResult executionId="6949aa46-6873-4ec1-8228-730b0570dcde" testId="31e0ae49-8bf7-1f42-0ff2-e269177abd3f" testName="TestUserRegistrationForEventWithEventScopedHandler" computerName="EVA00" duration="00:00:00.0050280" startTime="2025-09-17T14:47:49.7017529-03:00" endTime="2025-09-17T14:47:49.7067806-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6949aa46-6873-4ec1-8228-730b0570dcde">
      <Output>
        <StdOut>ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
Test completed</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a449aad5-b91c-484c-9a33-6a788aec16e7" testId="25268cc4-2331-4b42-6e2e-253f1321472c" testName="TestBuilderBasicParallel" computerName="EVA00" duration="00:00:00.0101200" startTime="2025-09-17T14:47:49.7281193-03:00" endTime="2025-09-17T14:47:49.7382389-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a449aad5-b91c-484c-9a33-6a788aec16e7" />
    <UnitTestResult executionId="6266d485-20ea-4351-8c52-8a9f21682293" testId="76fca776-d188-5e5b-424c-b6474647944b" testName="TestMergeHandlerReplacement" computerName="EVA00" duration="00:00:00.0017470" startTime="2025-09-17T14:47:49.7596718-03:00" endTime="2025-09-17T14:47:49.7614182-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6266d485-20ea-4351-8c52-8a9f21682293">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(mergedContext.HasChild("sequence"), Is.True)&#xD;
  Expected: True&#xD;
  But was:  False&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.TestV5.LSEventSystemTestsV5.TestMergeHandlerReplacement() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventSystem_v5_tests.cs:line 299&#xD;

1)    at LSUtils.EventSystem.TestV5.LSEventSystemTestsV5.TestMergeHandlerReplacement() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventSystem_v5_tests.cs:line 299&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="920da8de-00bd-4e90-a477-5fe5c552e80b" testId="c755e6e7-7466-5864-0d02-717f21c7f519" testName="TestBuilderBasicSequence" computerName="EVA00" duration="00:00:00.0020120" startTime="2025-09-17T14:47:49.7405336-03:00" endTime="2025-09-17T14:47:49.7425452-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="920da8de-00bd-4e90-a477-5fe5c552e80b" />
    <UnitTestResult executionId="9d4f92cb-46ea-4f30-8842-2184da6c39bc" testId="ff5e5f96-507f-039b-7f9b-cd009602695e" testName="TestCancelledStateHandlers" computerName="EVA00" duration="00:00:00.0016740" startTime="2025-09-17T14:47:49.6123263-03:00" endTime="2025-09-17T14:47:49.6140001-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9d4f92cb-46ea-4f30-8842-2184da6c39bc">
      <Output>
        <StdOut>Business phase handler - simulating cancellation.&#xD;
CancelledState handler executed.&#xD;
CompletedState handler executed after cancellation.&#xD;
CancelledState test completed - cancellation flow executed correctly</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="61bcec39-2784-4728-ae7a-e81ffe6b4390" testId="0b201a28-da98-8e84-96e4-b084fc20b739" testName="TestEventCreation" computerName="EVA00" duration="00:00:00.0011100" startTime="2025-09-17T14:47:49.7585476-03:00" endTime="2025-09-17T14:47:49.7596571-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="61bcec39-2784-4728-ae7a-e81ffe6b4390" />
    <UnitTestResult executionId="560101a6-a8d7-43a2-86b5-52e1ae1dafc7" testId="a0f3cbb1-e40c-a933-01bb-aaf3da9f7545" testName="TestMultipleEventsCancellationFlow" computerName="EVA00" duration="00:00:00.0054490" startTime="2025-09-17T14:47:49.6913925-03:00" endTime="2025-09-17T14:47:49.6968418-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="560101a6-a8d7-43a2-86b5-52e1ae1dafc7">
      <Output>
        <StdOut>ValidatePhase cancellation: BusinessState-Validate → CancelledState → CompletedState&#xD;
ConfigurePhase cancellation: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
ExecutePhase cancellation: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
CleanupPhase cancellation: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
Multiple events cancellation test completed:&#xD;
  Validate: BusinessState-Validate → CancelledState → CompletedState&#xD;
  Configure: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
  Execute: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
  Cleanup: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState</StdOut>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="TestConfigurePhaseSequentialWaiting" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="5f51b311-9af7-a8e2-3164-d3c1c249f2f7">
      <Execution id="296f36c0-cb96-45af-9869-add2acd5b8b0" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestConfigurePhaseSequentialWaiting" />
    </UnitTest>
    <UnitTest name="TestMergeHandlerReplacement" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="76fca776-d188-5e5b-424c-b6474647944b">
      <Execution id="6266d485-20ea-4351-8c52-8a9f21682293" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestMergeHandlerReplacement" />
    </UnitTest>
    <UnitTest name="TestCleanupPhaseWaitingDoesNotAffectBusinessResult" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="d1f0120b-5502-9f65-49ed-f68406757428">
      <Execution id="66ba0028-59cf-4a17-ae35-27a1d65d68b3" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCleanupPhaseWaitingDoesNotAffectBusinessResult" />
    </UnitTest>
    <UnitTest name="TestMergeWithoutCurrentNode" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="c15f362e-12b9-20b1-e826-6d4af9cf7b8c">
      <Execution id="002c2c30-c04c-4106-8cbf-833460251f4f" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestMergeWithoutCurrentNode" />
    </UnitTest>
    <UnitTest name="TestBuilderBasicSelector" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="9a214682-8af3-eeab-92f0-cce86781cbc9">
      <Execution id="ffb99688-12c0-41c8-ad36-a3569c55e5df" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderBasicSelector" />
    </UnitTest>
    <UnitTest name="TestMergeNonConflictingNodes" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="0ba7ced5-bd74-a29e-fc6b-7c8b96298ea6">
      <Execution id="2db91893-c261-4a66-a00c-3a5ec99e12e5" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestMergeNonConflictingNodes" />
    </UnitTest>
    <UnitTest name="TestExecutePhaseParallelWaiting" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="fbd3a990-6fa3-28ac-e959-ae600b2326f7">
      <Execution id="9a48bcb5-9aa6-422b-988c-f9c79b402c33" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestExecutePhaseParallelWaiting" />
    </UnitTest>
    <UnitTest name="TestUserRegistrationForEventWithEventScopedHandler" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="31e0ae49-8bf7-1f42-0ff2-e269177abd3f">
      <Execution id="6949aa46-6873-4ec1-8228-730b0570dcde" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserRegistrationForEventWithEventScopedHandler" />
    </UnitTest>
    <UnitTest name="TestUserRegistrationEvent" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="bc3e19fe-1115-8b55-6559-057d96f323b5">
      <Execution id="2ff9d664-addf-4abe-b900-6cc0c39f5271" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserRegistrationEvent" />
    </UnitTest>
    <UnitTest name="TestWaitingBehaviorWithCancel" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="456c0c5d-6ac4-1d6b-6eb9-72316753626d">
      <Execution id="f27be223-1bfc-4b53-83f6-7c01391feb46" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestWaitingBehaviorWithCancel" />
    </UnitTest>
    <UnitTest name="TestCompletedStateHandlers" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="3acc0d28-b75f-7d08-aae6-3d20d3141069">
      <Execution id="95734a93-e036-4d5a-957d-14cfd7beee3f" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCompletedStateHandlers" />
    </UnitTest>
    <UnitTest name="TestValidatePhaseCancellation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="cd6ad22a-ddc8-bc45-9606-3cec679a381f">
      <Execution id="5dd4d3ec-9951-424a-a7ef-6c0fe72e3756" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestValidatePhaseCancellation" />
    </UnitTest>
    <UnitTest name="TestBuilderBasicParallel" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="25268cc4-2331-4b42-6e2e-253f1321472c">
      <Execution id="a449aad5-b91c-484c-9a33-6a788aec16e7" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderBasicParallel" />
    </UnitTest>
    <UnitTest name="TestConfigurePhaseSequentialWaiting_PseudoSequential" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="b804ce67-e9a3-25cc-44e4-c4a2d9f41176">
      <Execution id="c6be988c-2d75-42c5-9dc5-5591d5da3105" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestConfigurePhaseSequentialWaiting_PseudoSequential" />
    </UnitTest>
    <UnitTest name="TestCancelledStateHandlers" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="ff5e5f96-507f-039b-7f9b-cd009602695e">
      <Execution id="9d4f92cb-46ea-4f30-8842-2184da6c39bc" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCancelledStateHandlers" />
    </UnitTest>
    <UnitTest name="TestUserRegistrationWithGlobalAndEventScopedHandlers" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="e78bc9b7-e63f-4761-fcbd-f5cec6e2cb67">
      <Execution id="567937a0-929f-4dd9-a162-3cd42b6cef57" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserRegistrationWithGlobalAndEventScopedHandlers" />
    </UnitTest>
    <UnitTest name="TestDeepRecursiveMerge" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="2adc1479-a6e0-39fb-afa7-ca0a917896f9">
      <Execution id="80bd2da7-3d89-4821-b8b5-1767c7878e76" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestDeepRecursiveMerge" />
    </UnitTest>
    <UnitTest name="TestExecutePhaseMultipleParallelWaiting" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="be96645d-9b41-d8c5-a5db-1a2ccfa572d3">
      <Execution id="34daa8a2-e2e0-4632-966a-2e803b73f310" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestExecutePhaseMultipleParallelWaiting" />
    </UnitTest>
    <UnitTest name="TestValidatePhaseWaitingCausesFailure" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="0884c81d-70a4-0702-1114-6a3eca2c2e7d">
      <Execution id="51b9d82f-e755-4697-835a-e1e5f8c67479" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestValidatePhaseWaitingCausesFailure" />
    </UnitTest>
    <UnitTest name="TestExecutePhaseParallelWaiting_PseudoSequential" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="ef645ed0-dc55-40d0-80c9-d8a473694566">
      <Execution id="bc436d75-9643-4609-aba7-787541d1ecd9" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestExecutePhaseParallelWaiting_PseudoSequential" />
    </UnitTest>
    <UnitTest name="TestFailureStateTransitionFlow" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="5b1b400f-13b7-e800-1d98-5474afcd5fdf">
      <Execution id="1efe8037-f751-481e-91c8-5df4cb55e0c7" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestFailureStateTransitionFlow" />
    </UnitTest>
    <UnitTest name="TestEventCreation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="0b201a28-da98-8e84-96e4-b084fc20b739">
      <Execution id="61bcec39-2784-4728-ae7a-e81ffe6b4390" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestEventCreation" />
    </UnitTest>
    <UnitTest name="TestMultipleEventsCancellationFlow" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="a0f3cbb1-e40c-a933-01bb-aaf3da9f7545">
      <Execution id="560101a6-a8d7-43a2-86b5-52e1ae1dafc7" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestMultipleEventsCancellationFlow" />
    </UnitTest>
    <UnitTest name="TestBuilderMergeIntoContext" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="842a23f3-23fb-d065-1b19-d30b3ae23942">
      <Execution id="c32f5d85-ff84-4368-96ac-1f6c0c0c2128" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderMergeIntoContext" />
    </UnitTest>
    <UnitTest name="TestConfigurePhaseCancellation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="153986f3-0ca3-73e8-62d7-f701648188ef">
      <Execution id="44d15263-ea91-4925-be34-a83483c4f1fe" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestConfigurePhaseCancellation" />
    </UnitTest>
    <UnitTest name="TestComplexHierarchyMerge" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="d9fa7fdb-e6df-80fb-a520-46e9ce214564">
      <Execution id="ec701bc2-1079-417d-a1f3-6d0833d37e3f" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestComplexHierarchyMerge" />
    </UnitTest>
    <UnitTest name="TestBuilderNestedStructure" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="450a2d8a-9137-f52c-ce1c-1c6b766575a2">
      <Execution id="2d1cc736-ef94-458c-9f39-6c579838a32d" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderNestedStructure" />
    </UnitTest>
    <UnitTest name="TestWaitingValidateFailure" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="3bf2ba75-2137-7683-a1f6-61f019b64298">
      <Execution id="9649e927-2d9c-41ae-b265-3f665cc59f03" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestWaitingValidateFailure" />
    </UnitTest>
    <UnitTest name="TestCleanupPhaseCancellationEventScoped" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="735b64af-ca63-0bcc-4a1e-cf249ef1718f">
      <Execution id="4726a370-ba33-4773-8415-f3cf4e44bb46" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCleanupPhaseCancellationEventScoped" />
    </UnitTest>
    <UnitTest name="TestMergeNullContext" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="8df863f7-106e-a0cc-68d6-8c1b218672de">
      <Execution id="507459e2-61ff-49b3-b91a-a5934ae7971f" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestMergeNullContext" />
    </UnitTest>
    <UnitTest name="TestWaitingBehaviorWithFail" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="d1c3599f-a00b-2ee4-a24b-9b1b1abcec53">
      <Execution id="08542b55-ee97-410c-bda4-720a505aa20a" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestWaitingBehaviorWithFail" />
    </UnitTest>
    <UnitTest name="TestStateTransitionFlow" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="568773c1-35a4-921a-7508-a2bd76c88ad5">
      <Execution id="e6d8f598-84e6-469c-9bcf-401ed8464094" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestStateTransitionFlow" />
    </UnitTest>
    <UnitTest name="TestBusinessStateProcessing" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="ed3d8703-6cf5-a3e7-978b-5fd79aa4d062">
      <Execution id="419fe50b-7566-49f2-802d-c5ee6e82b4e8" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestBusinessStateProcessing" />
    </UnitTest>
    <UnitTest name="TestBuilderWithContext" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="8c9812ca-7a53-2e36-f657-c2d157592732">
      <Execution id="66a2fe23-96eb-42dc-ae6b-1a5ee293725f" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderWithContext" />
    </UnitTest>
    <UnitTest name="TestRemoveNonExistentNode" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="78eb5c3b-21b8-1075-176f-da279c6b7d47">
      <Execution id="6b2a6fa2-08e2-4547-aae0-871b086a079e" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestRemoveNonExistentNode" />
    </UnitTest>
    <UnitTest name="TestUserCreation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="81a6a250-9cf2-f8fa-9aaa-63e8ddcff113">
      <Execution id="e6ff6339-9475-4404-a5f9-965dcd3b72df" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserCreation" />
    </UnitTest>
    <UnitTest name="TestMixedGlobalAndEventScopedCancellation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="8dc072b0-e1eb-b3cb-5750-66d1038684a6">
      <Execution id="2dcc34b9-60d9-463a-b69d-ff83a8bc87ae" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestMixedGlobalAndEventScopedCancellation" />
    </UnitTest>
    <UnitTest name="TestCleanupPhaseCancellation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="e3a074a6-0af1-e8d9-886d-5cdad1c2c783">
      <Execution id="47abb08a-ff80-4c44-b52c-93e10ed03422" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCleanupPhaseCancellation" />
    </UnitTest>
    <UnitTest name="TestExecutePhaseCancellation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="dae26ae9-2d4f-e557-f9b8-a98b3e9079c3">
      <Execution id="ca3eadab-62b9-430e-ba98-995dd4ced5ab" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestExecutePhaseCancellation" />
    </UnitTest>
    <UnitTest name="TestValidatePhaseCancellationEventScoped" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="1215759f-148f-b0ce-aa3a-7f8159689cd3">
      <Execution id="70be93c3-5bd4-4920-acaf-fb554300c091" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestValidatePhaseCancellationEventScoped" />
    </UnitTest>
    <UnitTest name="TestCancellationStateTransitionFlow" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="20a8d501-604a-4346-0163-a2c3d0cec3cd">
      <Execution id="a3f504a1-e021-4f67-abbd-c5177a239a0e" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCancellationStateTransitionFlow" />
    </UnitTest>
    <UnitTest name="TestSucceedStateHandlers" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="4857dd68-607d-7f8e-9527-6869379fbefa">
      <Execution id="c7a9a454-3529-4bda-b48b-0d7108a5bb8d" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestSucceedStateHandlers" />
    </UnitTest>
    <UnitTest name="TestBuilderBasicSequence" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="c755e6e7-7466-5864-0d02-717f21c7f519">
      <Execution id="920da8de-00bd-4e90-a477-5fe5c552e80b" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderBasicSequence" />
    </UnitTest>
    <UnitTest name="TestUserInitialization" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="840e3fd5-73f9-fa17-34c6-710f5dcbc729">
      <Execution id="d18659be-a0eb-482d-936b-eaea47096584" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserInitialization" />
    </UnitTest>
    <UnitTest name="TestUserRegistrationForEventWithGlobalPhaseHandler" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="a41408ab-7edf-d9b7-1677-9198f172d9ef">
      <Execution id="07e4c558-b372-49c0-aec3-254992338160" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserRegistrationForEventWithGlobalPhaseHandler" />
    </UnitTest>
    <UnitTest name="TestMixedNodeTypeMerge" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="a4dbf1e2-be50-f782-4272-afbc0816679f">
      <Execution id="07628894-0982-481d-a39a-073f188c0eb3" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestMixedNodeTypeMerge" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="bc3e19fe-1115-8b55-6559-057d96f323b5" executionId="2ff9d664-addf-4abe-b900-6cc0c39f5271" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9a214682-8af3-eeab-92f0-cce86781cbc9" executionId="ffb99688-12c0-41c8-ad36-a3569c55e5df" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c15f362e-12b9-20b1-e826-6d4af9cf7b8c" executionId="002c2c30-c04c-4106-8cbf-833460251f4f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e78bc9b7-e63f-4761-fcbd-f5cec6e2cb67" executionId="567937a0-929f-4dd9-a162-3cd42b6cef57" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8df863f7-106e-a0cc-68d6-8c1b218672de" executionId="507459e2-61ff-49b3-b91a-a5934ae7971f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3bf2ba75-2137-7683-a1f6-61f019b64298" executionId="9649e927-2d9c-41ae-b265-3f665cc59f03" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="78eb5c3b-21b8-1075-176f-da279c6b7d47" executionId="6b2a6fa2-08e2-4547-aae0-871b086a079e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8dc072b0-e1eb-b3cb-5750-66d1038684a6" executionId="2dcc34b9-60d9-463a-b69d-ff83a8bc87ae" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="735b64af-ca63-0bcc-4a1e-cf249ef1718f" executionId="4726a370-ba33-4773-8415-f3cf4e44bb46" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="456c0c5d-6ac4-1d6b-6eb9-72316753626d" executionId="f27be223-1bfc-4b53-83f6-7c01391feb46" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2adc1479-a6e0-39fb-afa7-ca0a917896f9" executionId="80bd2da7-3d89-4821-b8b5-1767c7878e76" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8c9812ca-7a53-2e36-f657-c2d157592732" executionId="66a2fe23-96eb-42dc-ae6b-1a5ee293725f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5f51b311-9af7-a8e2-3164-d3c1c249f2f7" executionId="296f36c0-cb96-45af-9869-add2acd5b8b0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3acc0d28-b75f-7d08-aae6-3d20d3141069" executionId="95734a93-e036-4d5a-957d-14cfd7beee3f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a41408ab-7edf-d9b7-1677-9198f172d9ef" executionId="07e4c558-b372-49c0-aec3-254992338160" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="840e3fd5-73f9-fa17-34c6-710f5dcbc729" executionId="d18659be-a0eb-482d-936b-eaea47096584" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0884c81d-70a4-0702-1114-6a3eca2c2e7d" executionId="51b9d82f-e755-4697-835a-e1e5f8c67479" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="568773c1-35a4-921a-7508-a2bd76c88ad5" executionId="e6d8f598-84e6-469c-9bcf-401ed8464094" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ed3d8703-6cf5-a3e7-978b-5fd79aa4d062" executionId="419fe50b-7566-49f2-802d-c5ee6e82b4e8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d1c3599f-a00b-2ee4-a24b-9b1b1abcec53" executionId="08542b55-ee97-410c-bda4-720a505aa20a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4857dd68-607d-7f8e-9527-6869379fbefa" executionId="c7a9a454-3529-4bda-b48b-0d7108a5bb8d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="81a6a250-9cf2-f8fa-9aaa-63e8ddcff113" executionId="e6ff6339-9475-4404-a5f9-965dcd3b72df" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a4dbf1e2-be50-f782-4272-afbc0816679f" executionId="07628894-0982-481d-a39a-073f188c0eb3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0ba7ced5-bd74-a29e-fc6b-7c8b96298ea6" executionId="2db91893-c261-4a66-a00c-3a5ec99e12e5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="20a8d501-604a-4346-0163-a2c3d0cec3cd" executionId="a3f504a1-e021-4f67-abbd-c5177a239a0e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="153986f3-0ca3-73e8-62d7-f701648188ef" executionId="44d15263-ea91-4925-be34-a83483c4f1fe" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cd6ad22a-ddc8-bc45-9606-3cec679a381f" executionId="5dd4d3ec-9951-424a-a7ef-6c0fe72e3756" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="be96645d-9b41-d8c5-a5db-1a2ccfa572d3" executionId="34daa8a2-e2e0-4632-966a-2e803b73f310" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fbd3a990-6fa3-28ac-e959-ae600b2326f7" executionId="9a48bcb5-9aa6-422b-988c-f9c79b402c33" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ef645ed0-dc55-40d0-80c9-d8a473694566" executionId="bc436d75-9643-4609-aba7-787541d1ecd9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5b1b400f-13b7-e800-1d98-5474afcd5fdf" executionId="1efe8037-f751-481e-91c8-5df4cb55e0c7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e3a074a6-0af1-e8d9-886d-5cdad1c2c783" executionId="47abb08a-ff80-4c44-b52c-93e10ed03422" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="450a2d8a-9137-f52c-ce1c-1c6b766575a2" executionId="2d1cc736-ef94-458c-9f39-6c579838a32d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1215759f-148f-b0ce-aa3a-7f8159689cd3" executionId="70be93c3-5bd4-4920-acaf-fb554300c091" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dae26ae9-2d4f-e557-f9b8-a98b3e9079c3" executionId="ca3eadab-62b9-430e-ba98-995dd4ced5ab" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d1f0120b-5502-9f65-49ed-f68406757428" executionId="66ba0028-59cf-4a17-ae35-27a1d65d68b3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="842a23f3-23fb-d065-1b19-d30b3ae23942" executionId="c32f5d85-ff84-4368-96ac-1f6c0c0c2128" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b804ce67-e9a3-25cc-44e4-c4a2d9f41176" executionId="c6be988c-2d75-42c5-9dc5-5591d5da3105" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d9fa7fdb-e6df-80fb-a520-46e9ce214564" executionId="ec701bc2-1079-417d-a1f3-6d0833d37e3f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="31e0ae49-8bf7-1f42-0ff2-e269177abd3f" executionId="6949aa46-6873-4ec1-8228-730b0570dcde" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="25268cc4-2331-4b42-6e2e-253f1321472c" executionId="a449aad5-b91c-484c-9a33-6a788aec16e7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="76fca776-d188-5e5b-424c-b6474647944b" executionId="6266d485-20ea-4351-8c52-8a9f21682293" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c755e6e7-7466-5864-0d02-717f21c7f519" executionId="920da8de-00bd-4e90-a477-5fe5c552e80b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ff5e5f96-507f-039b-7f9b-cd009602695e" executionId="9d4f92cb-46ea-4f30-8842-2184da6c39bc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0b201a28-da98-8e84-96e4-b084fc20b739" executionId="61bcec39-2784-4728-ae7a-e81ffe6b4390" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a0f3cbb1-e40c-a933-01bb-aaf3da9f7545" executionId="560101a6-a8d7-43a2-86b5-52e1ae1dafc7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Resultados que não estão em uma lista" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="Todos os resultados carregados" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="46" executed="46" passed="33" failed="13" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>NUnit Adapter 5.1.0.0: Test execution started&#xD;
Running all tests in D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll&#xD;
   NUnit3TestExecutor discovered 46 of 46 NUnit test cases using Current Discovery mode, Non-Explicit run&#xD;
BusinessState - ValidatePhase executed.&#xD;
BusinessState - ConfigurePhase executed.&#xD;
BusinessState - ExecutePhase executed.&#xD;
BusinessState - CleanupPhase executed.&#xD;
BusinessState test completed - all phases executed in correct order&#xD;
&#xD;
Cancellation state flow: BusinessState-Validate → CancelledState → CompletedState&#xD;
Cancellation state transition test completed - correct flow verified&#xD;
&#xD;
Business phase handler - simulating cancellation.&#xD;
CancelledState handler executed.&#xD;
CompletedState handler executed after cancellation.&#xD;
CancelledState test completed - cancellation flow executed correctly&#xD;
&#xD;
CleanupPhase cancellation flow: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
CleanupPhase cancellation test completed - core phases succeeded, cleanup cancelled but still goes to SucceedState&#xD;
&#xD;
CleanupPhase cancellation flow (event-scoped): BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
CleanupPhase cancellation test (event-scoped) completed - core phases succeeded, cleanup cancelled but still goes to SucceedState&#xD;
&#xD;
Business phase handler executed.&#xD;
SucceedState handler executed.&#xD;
CompletedState handler executed.&#xD;
CompletedState test completed - completion handlers executed as final step&#xD;
&#xD;
ConfigurePhase cancellation flow: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
ConfigurePhase cancellation test completed - direct transition to CancelledState&#xD;
&#xD;
[ConfigurePhase] Handler returned WAITING, _waitingHandlers before increment: 0&#xD;
[ConfigurePhase] _waitingHandlers after increment: 1&#xD;
[ConfigurePhase] Entering WAITING state&#xD;
&#xD;
[BusinessState] Resume() called, _currentPhase: ConfigurePhaseState&#xD;
[BusinessState] Calling Resume() on phase: ConfigurePhaseState&#xD;
[ConfigurePhase] Resume() called, _waitingHandlers before decrement: 0&#xD;
[ConfigurePhase] _waitingHandlers after decrement: -1&#xD;
[ConfigurePhase] Still waiting for more handlers: -1&#xD;
[BusinessState] Resume() returned: LSEventBusinessState, StateResult: WAITING&#xD;
[ConfigurePhase] Handler returned WAITING, _waitingHandlers before increment: -1&#xD;
[ConfigurePhase] _waitingHandlers after increment: 0&#xD;
[ConfigurePhase] Pseudo-sequential detected, treating as SUCCESS and continuing&#xD;
&#xD;
ExecutePhase cancellation flow: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
ExecutePhase cancellation test completed - direct transition to CancelledState&#xD;
&#xD;
[BusinessState] Resume() called, _currentPhase: ExecutePhaseState&#xD;
[BusinessState] Calling Resume() on phase: ExecutePhaseState&#xD;
[BusinessState] Resume() returned: LSEventBusinessState, StateResult: WAITING&#xD;
&#xD;
Failure state flow: BusinessState-Validate → CompletedState&#xD;
Failure state transition test completed - ValidatePhase failure skips all remaining phases&#xD;
&#xD;
Mixed global/event-scoped cancellation flow: Global-ValidatePhase → EventScoped-ConfigurePhase → EventScoped-CancelledState → Global-CancelledState → EventScoped-CompletedState → Global-CompletedState&#xD;
Mixed global and event-scoped cancellation test completed - both handler types executed&#xD;
&#xD;
ValidatePhase cancellation: BusinessState-Validate → CancelledState → CompletedState&#xD;
ConfigurePhase cancellation: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
ExecutePhase cancellation: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
CleanupPhase cancellation: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
Multiple events cancellation test completed:&#xD;
  Validate: BusinessState-Validate → CancelledState → CompletedState&#xD;
  Configure: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
  Execute: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
  Cleanup: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
&#xD;
BusinessState-Validate executed&#xD;
BusinessState-Execute executed&#xD;
SucceedState executed&#xD;
CompletedState executed&#xD;
Full state flow: BusinessState-Validate → BusinessState-Execute → SucceedState → CompletedState&#xD;
BusinessState index: 0, SucceedState index: 2, CompletedState index: 3&#xD;
State transition flow: BusinessState-Validate → BusinessState-Execute → SucceedState → CompletedState&#xD;
State transition test completed - correct flow verified&#xD;
&#xD;
Business phase handler executed.&#xD;
SucceedState handler executed.&#xD;
SucceedState test completed - success handlers executed after business phases&#xD;
&#xD;
ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
Test completed&#xD;
&#xD;
User created.&#xD;
ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
User registration event dispatched.&#xD;
ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
Another user registration event dispatched.&#xD;
Test completed&#xD;
&#xD;
User created.&#xD;
EVENT-SCOPED ValidatePhase handler executed.&#xD;
GLOBAL ValidatePhase handler executed.&#xD;
EVENT-SCOPED ConfigurePhase handler executed.&#xD;
GLOBAL ConfigurePhase handler executed.&#xD;
EVENT-SCOPED ExecutePhase handler executed.&#xD;
GLOBAL ExecutePhase handler executed.&#xD;
EVENT-SCOPED CleanupPhase handler executed.&#xD;
GLOBAL CleanupPhase handler executed.&#xD;
User registration event with both global and event-scoped handlers dispatched.&#xD;
Handlers executed in order: EVENT_ValidatePhase, GLOBAL_ValidatePhase, EVENT_ConfigurePhase, GLOBAL_ConfigurePhase, EVENT_ExecutePhase, GLOBAL_ExecutePhase, EVENT_CleanupPhase, GLOBAL_CleanupPhase&#xD;
Test completed - both global and event-scoped handlers worked together&#xD;
&#xD;
ValidatePhase cancellation flow: BusinessState-Validate → CancelledState → CompletedState&#xD;
ValidatePhase cancellation test completed - direct transition to CancelledState&#xD;
&#xD;
ValidatePhase cancellation flow (event-scoped): BusinessState-Validate → CancelledState → CompletedState&#xD;
ValidatePhase cancellation test (event-scoped) completed - direct transition to CancelledState&#xD;
&#xD;
Sub context: subContext&#xD;
Sub context children: handler1&#xD;
Root context before merge: root&#xD;
Root children before: &#xD;
Merged context: root&#xD;
Merged children: subContext&#xD;
&#xD;
NUnit Adapter 5.1.0.0: Test execution complete&#xD;
</StdOut>
    </Output>
  </ResultSummary>
</TestRun>