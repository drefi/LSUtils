<?xml version="1.0" encoding="utf-8"?>
<TestRun id="d97a9da1-182c-44f7-8d5e-db1264e4ffe3" name="Andre@EVA00 2025-09-17 14:41:02" runUser="EVA00\Andre" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2025-09-17T14:41:02.5951052-03:00" queuing="2025-09-17T14:41:02.5951055-03:00" start="2025-09-17T14:41:01.3471095-03:00" finish="2025-09-17T14:41:02.7195638-03:00" />
  <TestSettings name="default" id="306a4311-1120-46fa-a3e4-570b66328fe8">
    <Deployment runDeploymentRoot="Andre_EVA00_2025-09-17_14_41_02" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="648dbc7a-14f6-4d69-b43e-c9324581becd" testId="fbd3a990-6fa3-28ac-e959-ae600b2326f7" testName="TestExecutePhaseParallelWaiting" computerName="EVA00" duration="00:00:00.0020250" startTime="2025-09-17T14:41:02.4704152-03:00" endTime="2025-09-17T14:41:02.4724404-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="648dbc7a-14f6-4d69-b43e-c9324581becd">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder, Is.EqualTo(new[] { "Handler1_Waiting", "Handler2_Executed" }))&#xD;
  Expected is &lt;System.String[2]&gt;, actual is &lt;System.Collections.Generic.List`1[System.String]&gt; with 2 elements&#xD;
  Values differ at index [0]&#xD;
  Expected string length 16 but was 17. Strings differ at index 7.&#xD;
  Expected: &lt; "Handler1_Waiting", "Handler2_Executed" &gt;&#xD;
  But was:  &lt; "Handler2_Executed", "Handler1_Waiting" &gt;&#xD;
  First non-matching item at index [0]: "Handler1_Waiting"&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseParallelWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1435&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseParallelWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1435&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e5c0be9d-3906-4900-97e7-b56141e4cce1" testId="ed3d8703-6cf5-a3e7-978b-5fd79aa4d062" testName="TestBusinessStateProcessing" computerName="EVA00" duration="00:00:00.0458449" startTime="2025-09-17T14:41:02.3403773-03:00" endTime="2025-09-17T14:41:02.3861495-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e5c0be9d-3906-4900-97e7-b56141e4cce1">
      <Output>
        <StdOut>BusinessState - ValidatePhase executed.&#xD;
BusinessState - ConfigurePhase executed.&#xD;
BusinessState - ExecutePhase executed.&#xD;
BusinessState - CleanupPhase executed.&#xD;
BusinessState test completed - all phases executed in correct order</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="df030cfa-3bfa-4421-9d6b-72a96c5bd980" testId="4857dd68-607d-7f8e-9527-6869379fbefa" testName="TestSucceedStateHandlers" computerName="EVA00" duration="00:00:00.0009950" startTime="2025-09-17T14:41:02.4886208-03:00" endTime="2025-09-17T14:41:02.4896157-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="df030cfa-3bfa-4421-9d6b-72a96c5bd980">
      <Output>
        <StdOut>Business phase handler executed.&#xD;
SucceedState handler executed.&#xD;
SucceedState test completed - success handlers executed after business phases</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="056ab4e5-06f6-443d-84b1-8c7b3005fb9c" testId="568773c1-35a4-921a-7508-a2bd76c88ad5" testName="TestStateTransitionFlow" computerName="EVA00" duration="00:00:00.0024040" startTime="2025-09-17T14:41:02.4862045-03:00" endTime="2025-09-17T14:41:02.4886082-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="056ab4e5-06f6-443d-84b1-8c7b3005fb9c">
      <Output>
        <StdOut>BusinessState-Validate executed&#xD;
BusinessState-Execute executed&#xD;
SucceedState executed&#xD;
CompletedState executed&#xD;
Full state flow: BusinessState-Validate → BusinessState-Execute → SucceedState → CompletedState&#xD;
BusinessState index: 0, SucceedState index: 2, CompletedState index: 3&#xD;
State transition flow: BusinessState-Validate → BusinessState-Execute → SucceedState → CompletedState&#xD;
State transition test completed - correct flow verified</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4b1b774d-837e-4d55-8f15-b1bcbc0631c4" testId="d9fa7fdb-e6df-80fb-a520-46e9ce214564" testName="TestComplexHierarchyMerge" computerName="EVA00" duration="00:00:00.0025140" startTime="2025-09-17T14:41:02.5491565-03:00" endTime="2025-09-17T14:41:02.5516701-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4b1b774d-837e-4d55-8f15-b1bcbc0631c4" />
    <UnitTestResult executionId="e27c1223-6c90-4bac-b6a4-5e9d48bc6616" testId="e3a074a6-0af1-e8d9-886d-5cdad1c2c783" testName="TestCleanupPhaseCancellation" computerName="EVA00" duration="00:00:00.0028290" startTime="2025-09-17T14:41:02.4004700-03:00" endTime="2025-09-17T14:41:02.4032991-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e27c1223-6c90-4bac-b6a4-5e9d48bc6616">
      <Output>
        <StdOut>CleanupPhase cancellation flow: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
CleanupPhase cancellation test completed - core phases succeeded, cleanup cancelled but still goes to SucceedState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f5b7cdb1-738b-42be-9900-dde888098753" testId="450a2d8a-9137-f52c-ce1c-1c6b766575a2" testName="TestBuilderNestedStructure" computerName="EVA00" duration="00:00:00.0021790" startTime="2025-09-17T14:41:02.5462046-03:00" endTime="2025-09-17T14:41:02.5483830-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f5b7cdb1-738b-42be-9900-dde888098753" />
    <UnitTestResult executionId="c582c09f-0ed5-4a63-8d43-0220ad803b1d" testId="0884c81d-70a4-0702-1114-6a3eca2c2e7d" testName="TestValidatePhaseWaitingCausesFailure" computerName="EVA00" duration="00:00:00.0017300" startTime="2025-09-17T14:41:02.5089015-03:00" endTime="2025-09-17T14:41:02.5106311-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c582c09f-0ed5-4a63-8d43-0220ad803b1d">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(result, Is.EqualTo(EventProcessResult.FAILURE))&#xD;
  Expected: FAILURE&#xD;
  But was:  SUCCESS&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestValidatePhaseWaitingCausesFailure() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1258&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestValidatePhaseWaitingCausesFailure() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1258&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bdc24f85-885d-46f8-b8dc-11c3b9f5107c" testId="8c9812ca-7a53-2e36-f657-c2d157592732" testName="TestBuilderWithContext" computerName="EVA00" duration="00:00:00.0007470" startTime="2025-09-17T14:41:02.5483989-03:00" endTime="2025-09-17T14:41:02.5491458-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bdc24f85-885d-46f8-b8dc-11c3b9f5107c" />
    <UnitTestResult executionId="0b806418-2183-4a20-be86-c489e4a4af88" testId="25268cc4-2331-4b42-6e2e-253f1321472c" testName="TestBuilderBasicParallel" computerName="EVA00" duration="00:00:00.0115890" startTime="2025-09-17T14:41:02.5206466-03:00" endTime="2025-09-17T14:41:02.5322351-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0b806418-2183-4a20-be86-c489e4a4af88" />
    <UnitTestResult executionId="dad411ac-5748-4b36-9b6e-d00b18d07857" testId="8df863f7-106e-a0cc-68d6-8c1b218672de" testName="TestMergeNullContext" computerName="EVA00" duration="00:00:00.0030740" startTime="2025-09-17T14:41:02.5578198-03:00" endTime="2025-09-17T14:41:02.5608934-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dad411ac-5748-4b36-9b6e-d00b18d07857" />
    <UnitTestResult executionId="049bedef-a4d1-4edf-ba51-4eccb558103c" testId="456c0c5d-6ac4-1d6b-6eb9-72316753626d" testName="TestWaitingBehaviorWithCancel" computerName="EVA00" duration="00:00:00.0023999" startTime="2025-09-17T14:41:02.5106454-03:00" endTime="2025-09-17T14:41:02.5130452-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="049bedef-a4d1-4edf-ba51-4eccb558103c">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder[0], Is.EqualTo("Handler1_Waiting"))&#xD;
  Expected string length 16 but was 17. Strings differ at index 7.&#xD;
  Expected: "Handler1_Waiting"&#xD;
  But was:  "Handler2_Executed"&#xD;
  ------------------^&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingBehaviorWithCancel() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1590&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingBehaviorWithCancel() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1590&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="20bc4201-4ed8-4e8b-ae17-0d1753c77f4c" testId="76fca776-d188-5e5b-424c-b6474647944b" testName="TestMergeHandlerReplacement" computerName="EVA00" duration="00:00:00.0017390" startTime="2025-09-17T14:41:02.5541891-03:00" endTime="2025-09-17T14:41:02.5559278-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="20bc4201-4ed8-4e8b-ae17-0d1753c77f4c">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(mergedContext.HasChild("sequence"), Is.True)&#xD;
  Expected: True&#xD;
  But was:  False&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.TestV5.LSEventSystemTestsV5.TestMergeHandlerReplacement() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventSystem_v5_tests.cs:line 299&#xD;

1)    at LSUtils.EventSystem.TestV5.LSEventSystemTestsV5.TestMergeHandlerReplacement() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventSystem_v5_tests.cs:line 299&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="be9a09ba-cb31-4536-820b-10432d3b97b2" testId="1215759f-148f-b0ce-aa3a-7f8159689cd3" testName="TestValidatePhaseCancellationEventScoped" computerName="EVA00" duration="00:00:00.0025560" startTime="2025-09-17T14:41:02.5063280-03:00" endTime="2025-09-17T14:41:02.5088842-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="be9a09ba-cb31-4536-820b-10432d3b97b2">
      <Output>
        <StdOut>ValidatePhase cancellation flow (event-scoped): BusinessState-Validate → CancelledState → CompletedState&#xD;
ValidatePhase cancellation test (event-scoped) completed - direct transition to CancelledState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7b5423f5-6247-4717-9735-e3f74239f4f2" testId="ff5e5f96-507f-039b-7f9b-cd009602695e" testName="TestCancelledStateHandlers" computerName="EVA00" duration="00:00:00.0014139" startTime="2025-09-17T14:41:02.3990450-03:00" endTime="2025-09-17T14:41:02.4004586-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7b5423f5-6247-4717-9735-e3f74239f4f2">
      <Output>
        <StdOut>Business phase handler - simulating cancellation.&#xD;
CancelledState handler executed.&#xD;
CompletedState handler executed after cancellation.&#xD;
CancelledState test completed - cancellation flow executed correctly</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7793e271-41b6-4d37-8989-8bc41b9b242f" testId="be96645d-9b41-d8c5-a5db-1a2ccfa572d3" testName="TestExecutePhaseMultipleParallelWaiting" computerName="EVA00" duration="00:00:00.0042280" startTime="2025-09-17T14:41:02.4661732-03:00" endTime="2025-09-17T14:41:02.4704006-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7793e271-41b6-4d37-8989-8bc41b9b242f">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder[0], Is.EqualTo("Handler1_Waiting"))&#xD;
  String lengths are both 16. Strings differ at index 7.&#xD;
  Expected: "Handler1_Waiting"&#xD;
  But was:  "Handler3_Waiting"&#xD;
  ------------------^&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseMultipleParallelWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1490&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseMultipleParallelWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1490&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fa088425-2c2b-4228-93ca-2f71d21aa27f" testId="3bf2ba75-2137-7683-a1f6-61f019b64298" testName="TestWaitingValidateFailure" computerName="EVA00" duration="00:00:00.0020290" startTime="2025-09-17T14:41:02.5157101-03:00" endTime="2025-09-17T14:41:02.5177392-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fa088425-2c2b-4228-93ca-2f71d21aa27f">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(result, Is.EqualTo(EventProcessResult.FAILURE))&#xD;
  Expected: FAILURE&#xD;
  But was:  SUCCESS&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingValidateFailure() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1004&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingValidateFailure() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1004&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9a70dc28-bfad-4212-ad01-a665d789a84d" testId="e78bc9b7-e63f-4761-fcbd-f5cec6e2cb67" testName="TestUserRegistrationWithGlobalAndEventScopedHandlers" computerName="EVA00" duration="00:00:00.0048400" startTime="2025-09-17T14:41:02.4987155-03:00" endTime="2025-09-17T14:41:02.5035549-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9a70dc28-bfad-4212-ad01-a665d789a84d">
      <Output>
        <StdOut>User created.&#xD;
EVENT-SCOPED ValidatePhase handler executed.&#xD;
GLOBAL ValidatePhase handler executed.&#xD;
EVENT-SCOPED ConfigurePhase handler executed.&#xD;
GLOBAL ConfigurePhase handler executed.&#xD;
EVENT-SCOPED ExecutePhase handler executed.&#xD;
GLOBAL ExecutePhase handler executed.&#xD;
EVENT-SCOPED CleanupPhase handler executed.&#xD;
GLOBAL CleanupPhase handler executed.&#xD;
User registration event with both global and event-scoped handlers dispatched.&#xD;
Handlers executed in order: EVENT_ValidatePhase, GLOBAL_ValidatePhase, EVENT_ConfigurePhase, GLOBAL_ConfigurePhase, EVENT_ExecutePhase, GLOBAL_ExecutePhase, EVENT_CleanupPhase, GLOBAL_CleanupPhase&#xD;
Test completed - both global and event-scoped handlers worked together</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e953da6c-a75d-4812-9b62-653890f0e79c" testId="78eb5c3b-21b8-1075-176f-da279c6b7d47" testName="TestRemoveNonExistentNode" computerName="EVA00" duration="00:00:00.0017710" startTime="2025-09-17T14:41:02.5665522-03:00" endTime="2025-09-17T14:41:02.5683235-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e953da6c-a75d-4812-9b62-653890f0e79c" />
    <UnitTestResult executionId="75f8edc0-6aee-46be-9355-5f5e40c1aac4" testId="0ba7ced5-bd74-a29e-fc6b-7c8b96298ea6" testName="TestMergeNonConflictingNodes" computerName="EVA00" duration="00:00:00.0018490" startTime="2025-09-17T14:41:02.5559493-03:00" endTime="2025-09-17T14:41:02.5577980-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="75f8edc0-6aee-46be-9355-5f5e40c1aac4">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(root, Is.Not.Null)&#xD;
  Expected: not null&#xD;
  But was:  null&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.TestV5.LSEventSystemTestsV5.TestMergeNonConflictingNodes() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventSystem_v5_tests.cs:line 265&#xD;

1)    at LSUtils.EventSystem.TestV5.LSEventSystemTestsV5.TestMergeNonConflictingNodes() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventSystem_v5_tests.cs:line 265&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3aca4898-bc77-4afd-b9a1-00509312cd3a" testId="9a214682-8af3-eeab-92f0-cce86781cbc9" testName="TestBuilderBasicSelector" computerName="EVA00" duration="00:00:00.0030520" startTime="2025-09-17T14:41:02.5322633-03:00" endTime="2025-09-17T14:41:02.5353146-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3aca4898-bc77-4afd-b9a1-00509312cd3a" />
    <UnitTestResult executionId="16e5ad9a-8fd4-4670-80ca-9ff5e090439c" testId="31e0ae49-8bf7-1f42-0ff2-e269177abd3f" testName="TestUserRegistrationForEventWithEventScopedHandler" computerName="EVA00" duration="00:00:00.0056770" startTime="2025-09-17T14:41:02.4906202-03:00" endTime="2025-09-17T14:41:02.4962965-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="16e5ad9a-8fd4-4670-80ca-9ff5e090439c">
      <Output>
        <StdOut>ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
Test completed</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="17b1a6f8-520e-4132-81ce-9fe0fe22465d" testId="8dc072b0-e1eb-b3cb-5750-66d1038684a6" testName="TestMixedGlobalAndEventScopedCancellation" computerName="EVA00" duration="00:00:00.0022900" startTime="2025-09-17T14:41:02.4786376-03:00" endTime="2025-09-17T14:41:02.4809277-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="17b1a6f8-520e-4132-81ce-9fe0fe22465d">
      <Output>
        <StdOut>Mixed global/event-scoped cancellation flow: Global-ValidatePhase → EventScoped-ConfigurePhase → EventScoped-CancelledState → Global-CancelledState → EventScoped-CompletedState → Global-CompletedState&#xD;
Mixed global and event-scoped cancellation test completed - both handler types executed</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d22569f6-a532-4215-8216-387925271670" testId="b804ce67-e9a3-25cc-44e4-c4a2d9f41176" testName="TestConfigurePhaseSequentialWaiting_PseudoSequential" computerName="EVA00" duration="00:00:00.0050170" startTime="2025-09-17T14:41:02.4587532-03:00" endTime="2025-09-17T14:41:02.4637696-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d22569f6-a532-4215-8216-387925271670">
      <Output>
        <StdOut>[BusinessState] Resume() called, _currentPhase: ConfigurePhaseState&#xD;
[BusinessState] Calling Resume() on phase: ConfigurePhaseState&#xD;
[ConfigurePhase] Resume() called, _waitingHandlers before decrement: 0&#xD;
[ConfigurePhase] _waitingHandlers after decrement: -1&#xD;
[ConfigurePhase] Still waiting for more handlers: -1&#xD;
[BusinessState] Resume() returned: LSEventBusinessState, StateResult: WAITING&#xD;
[ConfigurePhase] Handler returned WAITING, _waitingHandlers before increment: -1&#xD;
[ConfigurePhase] _waitingHandlers after increment: 0&#xD;
[ConfigurePhase] Pseudo-sequential detected, treating as SUCCESS and continuing</StdOut>
        <ErrorInfo>
          <Message>  Assert.That(result, Is.EqualTo(EventProcessResult.SUCCESS))&#xD;
  Expected: SUCCESS&#xD;
  But was:  WAITING&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestConfigurePhaseSequentialWaiting_PseudoSequential() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1298&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestConfigurePhaseSequentialWaiting_PseudoSequential() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1298&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="211e40b5-c15f-4560-a604-57bce91687eb" testId="a0f3cbb1-e40c-a933-01bb-aaf3da9f7545" testName="TestMultipleEventsCancellationFlow" computerName="EVA00" duration="00:00:00.0052500" startTime="2025-09-17T14:41:02.4809390-03:00" endTime="2025-09-17T14:41:02.4861886-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="211e40b5-c15f-4560-a604-57bce91687eb">
      <Output>
        <StdOut>ValidatePhase cancellation: BusinessState-Validate → CancelledState → CompletedState&#xD;
ConfigurePhase cancellation: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
ExecutePhase cancellation: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
CleanupPhase cancellation: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
Multiple events cancellation test completed:&#xD;
  Validate: BusinessState-Validate → CancelledState → CompletedState&#xD;
  Configure: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
  Execute: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
  Cleanup: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0a37ab7a-db86-4f8a-a77d-7b7e52673376" testId="bc3e19fe-1115-8b55-6559-057d96f323b5" testName="TestUserRegistrationEvent" computerName="EVA00" duration="00:00:00.0001920" startTime="2025-09-17T14:41:02.4904186-03:00" endTime="2025-09-17T14:41:02.4906108-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0a37ab7a-db86-4f8a-a77d-7b7e52673376" />
    <UnitTestResult executionId="4eb40d2b-058b-4c59-8138-5a816686e127" testId="2adc1479-a6e0-39fb-afa7-ca0a917896f9" testName="TestDeepRecursiveMerge" computerName="EVA00" duration="00:00:00.0013600" startTime="2025-09-17T14:41:02.5516867-03:00" endTime="2025-09-17T14:41:02.5530467-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4eb40d2b-058b-4c59-8138-5a816686e127" />
    <UnitTestResult executionId="17d44580-b52b-4a25-aa64-8ddbc7376ad7" testId="153986f3-0ca3-73e8-62d7-f701648188ef" testName="TestConfigurePhaseCancellation" computerName="EVA00" duration="00:00:00.0025550" startTime="2025-09-17T14:41:02.4519322-03:00" endTime="2025-09-17T14:41:02.4544874-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="17d44580-b52b-4a25-aa64-8ddbc7376ad7">
      <Output>
        <StdOut>ConfigurePhase cancellation flow: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
ConfigurePhase cancellation test completed - direct transition to CancelledState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="570505a6-20d8-42c0-8b28-cfceec89025a" testId="ef645ed0-dc55-40d0-80c9-d8a473694566" testName="TestExecutePhaseParallelWaiting_PseudoSequential" computerName="EVA00" duration="00:00:00.0045100" startTime="2025-09-17T14:41:02.4724558-03:00" endTime="2025-09-17T14:41:02.4769658-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="570505a6-20d8-42c0-8b28-cfceec89025a">
      <Output>
        <StdOut>[BusinessState] Resume() called, _currentPhase: ExecutePhaseState&#xD;
[BusinessState] Calling Resume() on phase: ExecutePhaseState&#xD;
[BusinessState] Resume() returned: LSEventBusinessState, StateResult: WAITING</StdOut>
        <ErrorInfo>
          <Message>  Assert.That(result, Is.EqualTo(EventProcessResult.SUCCESS))&#xD;
  Expected: SUCCESS&#xD;
  But was:  WAITING&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseParallelWaiting_PseudoSequential() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1389&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseParallelWaiting_PseudoSequential() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1389&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ab4e1180-bf71-4892-bf3b-7e7fadf5b5ce" testId="dae26ae9-2d4f-e557-f9b8-a98b3e9079c3" testName="TestExecutePhaseCancellation" computerName="EVA00" duration="00:00:00.0023720" startTime="2025-09-17T14:41:02.4637884-03:00" endTime="2025-09-17T14:41:02.4661606-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ab4e1180-bf71-4892-bf3b-7e7fadf5b5ce">
      <Output>
        <StdOut>ExecutePhase cancellation flow: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
ExecutePhase cancellation test completed - direct transition to CancelledState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="41e95650-8af5-4d8d-9397-c234cb922b79" testId="5b1b400f-13b7-e800-1d98-5474afcd5fdf" testName="TestFailureStateTransitionFlow" computerName="EVA00" duration="00:00:00.0016380" startTime="2025-09-17T14:41:02.4769871-03:00" endTime="2025-09-17T14:41:02.4786251-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="41e95650-8af5-4d8d-9397-c234cb922b79">
      <Output>
        <StdOut>Failure state flow: BusinessState-Validate → CompletedState&#xD;
Failure state transition test completed - ValidatePhase failure skips all remaining phases</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4845f478-2a49-40c3-804c-b0988a137199" testId="a4dbf1e2-be50-f782-4272-afbc0816679f" testName="TestMixedNodeTypeMerge" computerName="EVA00" duration="00:00:00.0013760" startTime="2025-09-17T14:41:02.5651355-03:00" endTime="2025-09-17T14:41:02.5665114-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4845f478-2a49-40c3-804c-b0988a137199" />
    <UnitTestResult executionId="b4e1d449-be27-473e-8027-9eaad7068c8c" testId="5f51b311-9af7-a8e2-3164-d3c1c249f2f7" testName="TestConfigurePhaseSequentialWaiting" computerName="EVA00" duration="00:00:00.0042170" startTime="2025-09-17T14:41:02.4545103-03:00" endTime="2025-09-17T14:41:02.4587270-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b4e1d449-be27-473e-8027-9eaad7068c8c">
      <Output>
        <StdOut>[ConfigurePhase] Handler returned WAITING, _waitingHandlers before increment: 0&#xD;
[ConfigurePhase] _waitingHandlers after increment: 1&#xD;
[ConfigurePhase] Entering WAITING state</StdOut>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder.Count, Is.EqualTo(1))&#xD;
  Expected: 1&#xD;
  But was:  2&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestConfigurePhaseSequentialWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1339&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestConfigurePhaseSequentialWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1339&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8d353f54-9779-4fc7-8213-9c4983c99ed2" testId="d1c3599f-a00b-2ee4-a24b-9b1b1abcec53" testName="TestWaitingBehaviorWithFail" computerName="EVA00" duration="00:00:00.0026370" startTime="2025-09-17T14:41:02.5130591-03:00" endTime="2025-09-17T14:41:02.5156962-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8d353f54-9779-4fc7-8213-9c4983c99ed2">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder[0], Is.EqualTo("Handler1_Waiting"))&#xD;
  Expected string length 16 but was 17. Strings differ at index 7.&#xD;
  Expected: "Handler1_Waiting"&#xD;
  But was:  "Handler2_Executed"&#xD;
  ------------------^&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingBehaviorWithFail() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1647&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingBehaviorWithFail() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1647&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5fc05d80-c3e5-423f-898f-2b81af6f8d49" testId="a41408ab-7edf-d9b7-1677-9198f172d9ef" testName="TestUserRegistrationForEventWithGlobalPhaseHandler" computerName="EVA00" duration="00:00:00.0023800" startTime="2025-09-17T14:41:02.4963189-03:00" endTime="2025-09-17T14:41:02.4986982-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5fc05d80-c3e5-423f-898f-2b81af6f8d49">
      <Output>
        <StdOut>User created.&#xD;
ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
User registration event dispatched.&#xD;
ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
Another user registration event dispatched.&#xD;
Test completed</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9f878afc-2b66-422c-a146-ea4ac2b2b6e9" testId="20a8d501-604a-4346-0163-a2c3d0cec3cd" testName="TestCancellationStateTransitionFlow" computerName="EVA00" duration="00:00:00.0113950" startTime="2025-09-17T14:41:02.3876140-03:00" endTime="2025-09-17T14:41:02.3990088-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9f878afc-2b66-422c-a146-ea4ac2b2b6e9">
      <Output>
        <StdOut>Cancellation state flow: BusinessState-Validate → CancelledState → CompletedState&#xD;
Cancellation state transition test completed - correct flow verified</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="88ec9db9-d42d-4e68-8cdd-6e3e9d3ce0cf" testId="cd6ad22a-ddc8-bc45-9606-3cec679a381f" testName="TestValidatePhaseCancellation" computerName="EVA00" duration="00:00:00.0027330" startTime="2025-09-17T14:41:02.5035709-03:00" endTime="2025-09-17T14:41:02.5063041-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="88ec9db9-d42d-4e68-8cdd-6e3e9d3ce0cf">
      <Output>
        <StdOut>ValidatePhase cancellation flow: BusinessState-Validate → CancelledState → CompletedState&#xD;
ValidatePhase cancellation test completed - direct transition to CancelledState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4ca76db0-a158-46ac-a84f-c18e075601fc" testId="c15f362e-12b9-20b1-e826-6d4af9cf7b8c" testName="TestMergeWithoutCurrentNode" computerName="EVA00" duration="00:00:00.0033420" startTime="2025-09-17T14:41:02.5612843-03:00" endTime="2025-09-17T14:41:02.5646257-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4ca76db0-a158-46ac-a84f-c18e075601fc">
      <Output>
        <ErrorInfo>
          <Message>LSUtils.LSException : No current node to build. Make sure to end all layers.</Message>
          <StackTrace>   at LSUtils.EventSystem.LSEventContextBuilder.Build() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventContextBuilder.cs:line 241&#xD;
   at LSUtils.EventSystem.TestV5.LSEventSystemTestsV5.TestMergeWithoutCurrentNode() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventSystem_v5_tests.cs:line 450&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="23634744-2476-45f9-9818-197fae7b4d24" testId="840e3fd5-73f9-fa17-34c6-710f5dcbc729" testName="TestUserInitialization" computerName="EVA00" duration="00:00:00.0005370" startTime="2025-09-17T14:41:02.4898712-03:00" endTime="2025-09-17T14:41:02.4904085-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="23634744-2476-45f9-9818-197fae7b4d24" />
    <UnitTestResult executionId="b3de97b8-e780-4d9f-bae6-685c6e93c56a" testId="d1f0120b-5502-9f65-49ed-f68406757428" testName="TestCleanupPhaseWaitingDoesNotAffectBusinessResult" computerName="EVA00" duration="00:00:00.0434200" startTime="2025-09-17T14:41:02.4068166-03:00" endTime="2025-09-17T14:41:02.4502367-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b3de97b8-e780-4d9f-bae6-685c6e93c56a">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder, Is.EqualTo(new[] { "Validate_Success", "Execute_Success", "Cleanup_Waiting", "Cleanup_Success" }))&#xD;
  Expected is &lt;System.String[4]&gt;, actual is &lt;System.Collections.Generic.List`1[System.String]&gt; with 4 elements&#xD;
  Values differ at index [2]&#xD;
  String lengths are both 15. Strings differ at index 8.&#xD;
  Expected: &lt; "Validate_Success", "Execute_Success", "Cleanup_Waiting", "Cleanup_Success" &gt;&#xD;
  But was:  &lt; "Validate_Success", "Execute_Success", "Cleanup_Success", "Cleanup_Waiting" &gt;&#xD;
  First non-matching item at index [2]: "Cleanup_Waiting"&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestCleanupPhaseWaitingDoesNotAffectBusinessResult() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1546&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestCleanupPhaseWaitingDoesNotAffectBusinessResult() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1546&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="01ff505b-8f36-4925-8e0f-8f4c9edd1296" testId="735b64af-ca63-0bcc-4a1e-cf249ef1718f" testName="TestCleanupPhaseCancellationEventScoped" computerName="EVA00" duration="00:00:00.0034910" startTime="2025-09-17T14:41:02.4033110-03:00" endTime="2025-09-17T14:41:02.4068022-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="01ff505b-8f36-4925-8e0f-8f4c9edd1296">
      <Output>
        <StdOut>CleanupPhase cancellation flow (event-scoped): BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
CleanupPhase cancellation test (event-scoped) completed - core phases succeeded, cleanup cancelled but still goes to SucceedState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f0a60ac4-e76d-4deb-bbf1-93116dad33ea" testId="842a23f3-23fb-d065-1b19-d30b3ae23942" testName="TestBuilderMergeIntoContext" computerName="EVA00" duration="00:00:00.0082330" startTime="2025-09-17T14:41:02.5379496-03:00" endTime="2025-09-17T14:41:02.5461818-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f0a60ac4-e76d-4deb-bbf1-93116dad33ea">
      <Output>
        <StdOut>Sub context: subContext&#xD;
Sub context children: handler1&#xD;
Root context before merge: root&#xD;
Root children before: &#xD;
Merged context: root&#xD;
Merged children: subContext</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="20399819-6ce9-4f10-abdf-7e09469702de" testId="3acc0d28-b75f-7d08-aae6-3d20d3141069" testName="TestCompletedStateHandlers" computerName="EVA00" duration="00:00:00.0015750" startTime="2025-09-17T14:41:02.4503433-03:00" endTime="2025-09-17T14:41:02.4519183-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="20399819-6ce9-4f10-abdf-7e09469702de">
      <Output>
        <StdOut>Business phase handler executed.&#xD;
SucceedState handler executed.&#xD;
CompletedState handler executed.&#xD;
CompletedState test completed - completion handlers executed as final step</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5bf5be7e-7165-42e2-993a-0173046df76d" testId="0b201a28-da98-8e84-96e4-b084fc20b739" testName="TestEventCreation" computerName="EVA00" duration="00:00:00.0011060" startTime="2025-09-17T14:41:02.5530645-03:00" endTime="2025-09-17T14:41:02.5541703-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5bf5be7e-7165-42e2-993a-0173046df76d" />
    <UnitTestResult executionId="71cb9069-697d-464b-92f1-ff6415673e34" testId="81a6a250-9cf2-f8fa-9aaa-63e8ddcff113" testName="TestUserCreation" computerName="EVA00" duration="00:00:00.0002360" startTime="2025-09-17T14:41:02.4896262-03:00" endTime="2025-09-17T14:41:02.4898620-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="71cb9069-697d-464b-92f1-ff6415673e34" />
    <UnitTestResult executionId="3103e79e-5f3d-48d3-83ae-918d7ad624bf" testId="c755e6e7-7466-5864-0d02-717f21c7f519" testName="TestBuilderBasicSequence" computerName="EVA00" duration="00:00:00.0026000" startTime="2025-09-17T14:41:02.5353345-03:00" endTime="2025-09-17T14:41:02.5379341-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3103e79e-5f3d-48d3-83ae-918d7ad624bf" />
  </Results>
  <TestDefinitions>
    <UnitTest name="TestConfigurePhaseSequentialWaiting" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="5f51b311-9af7-a8e2-3164-d3c1c249f2f7">
      <Execution id="b4e1d449-be27-473e-8027-9eaad7068c8c" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestConfigurePhaseSequentialWaiting" />
    </UnitTest>
    <UnitTest name="TestMergeHandlerReplacement" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="76fca776-d188-5e5b-424c-b6474647944b">
      <Execution id="20bc4201-4ed8-4e8b-ae17-0d1753c77f4c" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestMergeHandlerReplacement" />
    </UnitTest>
    <UnitTest name="TestCleanupPhaseWaitingDoesNotAffectBusinessResult" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="d1f0120b-5502-9f65-49ed-f68406757428">
      <Execution id="b3de97b8-e780-4d9f-bae6-685c6e93c56a" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCleanupPhaseWaitingDoesNotAffectBusinessResult" />
    </UnitTest>
    <UnitTest name="TestMergeWithoutCurrentNode" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="c15f362e-12b9-20b1-e826-6d4af9cf7b8c">
      <Execution id="4ca76db0-a158-46ac-a84f-c18e075601fc" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestMergeWithoutCurrentNode" />
    </UnitTest>
    <UnitTest name="TestBuilderBasicSelector" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="9a214682-8af3-eeab-92f0-cce86781cbc9">
      <Execution id="3aca4898-bc77-4afd-b9a1-00509312cd3a" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderBasicSelector" />
    </UnitTest>
    <UnitTest name="TestMergeNonConflictingNodes" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="0ba7ced5-bd74-a29e-fc6b-7c8b96298ea6">
      <Execution id="75f8edc0-6aee-46be-9355-5f5e40c1aac4" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestMergeNonConflictingNodes" />
    </UnitTest>
    <UnitTest name="TestExecutePhaseParallelWaiting" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="fbd3a990-6fa3-28ac-e959-ae600b2326f7">
      <Execution id="648dbc7a-14f6-4d69-b43e-c9324581becd" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestExecutePhaseParallelWaiting" />
    </UnitTest>
    <UnitTest name="TestUserRegistrationForEventWithEventScopedHandler" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="31e0ae49-8bf7-1f42-0ff2-e269177abd3f">
      <Execution id="16e5ad9a-8fd4-4670-80ca-9ff5e090439c" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserRegistrationForEventWithEventScopedHandler" />
    </UnitTest>
    <UnitTest name="TestUserRegistrationEvent" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="bc3e19fe-1115-8b55-6559-057d96f323b5">
      <Execution id="0a37ab7a-db86-4f8a-a77d-7b7e52673376" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserRegistrationEvent" />
    </UnitTest>
    <UnitTest name="TestWaitingBehaviorWithCancel" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="456c0c5d-6ac4-1d6b-6eb9-72316753626d">
      <Execution id="049bedef-a4d1-4edf-ba51-4eccb558103c" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestWaitingBehaviorWithCancel" />
    </UnitTest>
    <UnitTest name="TestCompletedStateHandlers" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="3acc0d28-b75f-7d08-aae6-3d20d3141069">
      <Execution id="20399819-6ce9-4f10-abdf-7e09469702de" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCompletedStateHandlers" />
    </UnitTest>
    <UnitTest name="TestValidatePhaseCancellation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="cd6ad22a-ddc8-bc45-9606-3cec679a381f">
      <Execution id="88ec9db9-d42d-4e68-8cdd-6e3e9d3ce0cf" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestValidatePhaseCancellation" />
    </UnitTest>
    <UnitTest name="TestBuilderBasicParallel" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="25268cc4-2331-4b42-6e2e-253f1321472c">
      <Execution id="0b806418-2183-4a20-be86-c489e4a4af88" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderBasicParallel" />
    </UnitTest>
    <UnitTest name="TestConfigurePhaseSequentialWaiting_PseudoSequential" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="b804ce67-e9a3-25cc-44e4-c4a2d9f41176">
      <Execution id="d22569f6-a532-4215-8216-387925271670" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestConfigurePhaseSequentialWaiting_PseudoSequential" />
    </UnitTest>
    <UnitTest name="TestCancelledStateHandlers" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="ff5e5f96-507f-039b-7f9b-cd009602695e">
      <Execution id="7b5423f5-6247-4717-9735-e3f74239f4f2" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCancelledStateHandlers" />
    </UnitTest>
    <UnitTest name="TestUserRegistrationWithGlobalAndEventScopedHandlers" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="e78bc9b7-e63f-4761-fcbd-f5cec6e2cb67">
      <Execution id="9a70dc28-bfad-4212-ad01-a665d789a84d" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserRegistrationWithGlobalAndEventScopedHandlers" />
    </UnitTest>
    <UnitTest name="TestDeepRecursiveMerge" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="2adc1479-a6e0-39fb-afa7-ca0a917896f9">
      <Execution id="4eb40d2b-058b-4c59-8138-5a816686e127" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestDeepRecursiveMerge" />
    </UnitTest>
    <UnitTest name="TestExecutePhaseMultipleParallelWaiting" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="be96645d-9b41-d8c5-a5db-1a2ccfa572d3">
      <Execution id="7793e271-41b6-4d37-8989-8bc41b9b242f" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestExecutePhaseMultipleParallelWaiting" />
    </UnitTest>
    <UnitTest name="TestValidatePhaseWaitingCausesFailure" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="0884c81d-70a4-0702-1114-6a3eca2c2e7d">
      <Execution id="c582c09f-0ed5-4a63-8d43-0220ad803b1d" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestValidatePhaseWaitingCausesFailure" />
    </UnitTest>
    <UnitTest name="TestExecutePhaseParallelWaiting_PseudoSequential" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="ef645ed0-dc55-40d0-80c9-d8a473694566">
      <Execution id="570505a6-20d8-42c0-8b28-cfceec89025a" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestExecutePhaseParallelWaiting_PseudoSequential" />
    </UnitTest>
    <UnitTest name="TestFailureStateTransitionFlow" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="5b1b400f-13b7-e800-1d98-5474afcd5fdf">
      <Execution id="41e95650-8af5-4d8d-9397-c234cb922b79" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestFailureStateTransitionFlow" />
    </UnitTest>
    <UnitTest name="TestEventCreation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="0b201a28-da98-8e84-96e4-b084fc20b739">
      <Execution id="5bf5be7e-7165-42e2-993a-0173046df76d" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestEventCreation" />
    </UnitTest>
    <UnitTest name="TestMultipleEventsCancellationFlow" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="a0f3cbb1-e40c-a933-01bb-aaf3da9f7545">
      <Execution id="211e40b5-c15f-4560-a604-57bce91687eb" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestMultipleEventsCancellationFlow" />
    </UnitTest>
    <UnitTest name="TestBuilderMergeIntoContext" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="842a23f3-23fb-d065-1b19-d30b3ae23942">
      <Execution id="f0a60ac4-e76d-4deb-bbf1-93116dad33ea" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderMergeIntoContext" />
    </UnitTest>
    <UnitTest name="TestConfigurePhaseCancellation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="153986f3-0ca3-73e8-62d7-f701648188ef">
      <Execution id="17d44580-b52b-4a25-aa64-8ddbc7376ad7" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestConfigurePhaseCancellation" />
    </UnitTest>
    <UnitTest name="TestComplexHierarchyMerge" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="d9fa7fdb-e6df-80fb-a520-46e9ce214564">
      <Execution id="4b1b774d-837e-4d55-8f15-b1bcbc0631c4" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestComplexHierarchyMerge" />
    </UnitTest>
    <UnitTest name="TestBuilderNestedStructure" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="450a2d8a-9137-f52c-ce1c-1c6b766575a2">
      <Execution id="f5b7cdb1-738b-42be-9900-dde888098753" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderNestedStructure" />
    </UnitTest>
    <UnitTest name="TestWaitingValidateFailure" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="3bf2ba75-2137-7683-a1f6-61f019b64298">
      <Execution id="fa088425-2c2b-4228-93ca-2f71d21aa27f" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestWaitingValidateFailure" />
    </UnitTest>
    <UnitTest name="TestCleanupPhaseCancellationEventScoped" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="735b64af-ca63-0bcc-4a1e-cf249ef1718f">
      <Execution id="01ff505b-8f36-4925-8e0f-8f4c9edd1296" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCleanupPhaseCancellationEventScoped" />
    </UnitTest>
    <UnitTest name="TestMergeNullContext" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="8df863f7-106e-a0cc-68d6-8c1b218672de">
      <Execution id="dad411ac-5748-4b36-9b6e-d00b18d07857" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestMergeNullContext" />
    </UnitTest>
    <UnitTest name="TestWaitingBehaviorWithFail" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="d1c3599f-a00b-2ee4-a24b-9b1b1abcec53">
      <Execution id="8d353f54-9779-4fc7-8213-9c4983c99ed2" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestWaitingBehaviorWithFail" />
    </UnitTest>
    <UnitTest name="TestStateTransitionFlow" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="568773c1-35a4-921a-7508-a2bd76c88ad5">
      <Execution id="056ab4e5-06f6-443d-84b1-8c7b3005fb9c" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestStateTransitionFlow" />
    </UnitTest>
    <UnitTest name="TestBusinessStateProcessing" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="ed3d8703-6cf5-a3e7-978b-5fd79aa4d062">
      <Execution id="e5c0be9d-3906-4900-97e7-b56141e4cce1" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestBusinessStateProcessing" />
    </UnitTest>
    <UnitTest name="TestBuilderWithContext" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="8c9812ca-7a53-2e36-f657-c2d157592732">
      <Execution id="bdc24f85-885d-46f8-b8dc-11c3b9f5107c" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderWithContext" />
    </UnitTest>
    <UnitTest name="TestRemoveNonExistentNode" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="78eb5c3b-21b8-1075-176f-da279c6b7d47">
      <Execution id="e953da6c-a75d-4812-9b62-653890f0e79c" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestRemoveNonExistentNode" />
    </UnitTest>
    <UnitTest name="TestUserCreation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="81a6a250-9cf2-f8fa-9aaa-63e8ddcff113">
      <Execution id="71cb9069-697d-464b-92f1-ff6415673e34" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserCreation" />
    </UnitTest>
    <UnitTest name="TestMixedGlobalAndEventScopedCancellation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="8dc072b0-e1eb-b3cb-5750-66d1038684a6">
      <Execution id="17b1a6f8-520e-4132-81ce-9fe0fe22465d" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestMixedGlobalAndEventScopedCancellation" />
    </UnitTest>
    <UnitTest name="TestCleanupPhaseCancellation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="e3a074a6-0af1-e8d9-886d-5cdad1c2c783">
      <Execution id="e27c1223-6c90-4bac-b6a4-5e9d48bc6616" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCleanupPhaseCancellation" />
    </UnitTest>
    <UnitTest name="TestExecutePhaseCancellation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="dae26ae9-2d4f-e557-f9b8-a98b3e9079c3">
      <Execution id="ab4e1180-bf71-4892-bf3b-7e7fadf5b5ce" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestExecutePhaseCancellation" />
    </UnitTest>
    <UnitTest name="TestValidatePhaseCancellationEventScoped" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="1215759f-148f-b0ce-aa3a-7f8159689cd3">
      <Execution id="be9a09ba-cb31-4536-820b-10432d3b97b2" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestValidatePhaseCancellationEventScoped" />
    </UnitTest>
    <UnitTest name="TestCancellationStateTransitionFlow" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="20a8d501-604a-4346-0163-a2c3d0cec3cd">
      <Execution id="9f878afc-2b66-422c-a146-ea4ac2b2b6e9" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCancellationStateTransitionFlow" />
    </UnitTest>
    <UnitTest name="TestSucceedStateHandlers" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="4857dd68-607d-7f8e-9527-6869379fbefa">
      <Execution id="df030cfa-3bfa-4421-9d6b-72a96c5bd980" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestSucceedStateHandlers" />
    </UnitTest>
    <UnitTest name="TestBuilderBasicSequence" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="c755e6e7-7466-5864-0d02-717f21c7f519">
      <Execution id="3103e79e-5f3d-48d3-83ae-918d7ad624bf" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderBasicSequence" />
    </UnitTest>
    <UnitTest name="TestUserInitialization" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="840e3fd5-73f9-fa17-34c6-710f5dcbc729">
      <Execution id="23634744-2476-45f9-9818-197fae7b4d24" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserInitialization" />
    </UnitTest>
    <UnitTest name="TestUserRegistrationForEventWithGlobalPhaseHandler" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="a41408ab-7edf-d9b7-1677-9198f172d9ef">
      <Execution id="5fc05d80-c3e5-423f-898f-2b81af6f8d49" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserRegistrationForEventWithGlobalPhaseHandler" />
    </UnitTest>
    <UnitTest name="TestMixedNodeTypeMerge" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="a4dbf1e2-be50-f782-4272-afbc0816679f">
      <Execution id="4845f478-2a49-40c3-804c-b0988a137199" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestMixedNodeTypeMerge" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="fbd3a990-6fa3-28ac-e959-ae600b2326f7" executionId="648dbc7a-14f6-4d69-b43e-c9324581becd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ed3d8703-6cf5-a3e7-978b-5fd79aa4d062" executionId="e5c0be9d-3906-4900-97e7-b56141e4cce1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4857dd68-607d-7f8e-9527-6869379fbefa" executionId="df030cfa-3bfa-4421-9d6b-72a96c5bd980" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="568773c1-35a4-921a-7508-a2bd76c88ad5" executionId="056ab4e5-06f6-443d-84b1-8c7b3005fb9c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d9fa7fdb-e6df-80fb-a520-46e9ce214564" executionId="4b1b774d-837e-4d55-8f15-b1bcbc0631c4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e3a074a6-0af1-e8d9-886d-5cdad1c2c783" executionId="e27c1223-6c90-4bac-b6a4-5e9d48bc6616" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="450a2d8a-9137-f52c-ce1c-1c6b766575a2" executionId="f5b7cdb1-738b-42be-9900-dde888098753" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0884c81d-70a4-0702-1114-6a3eca2c2e7d" executionId="c582c09f-0ed5-4a63-8d43-0220ad803b1d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8c9812ca-7a53-2e36-f657-c2d157592732" executionId="bdc24f85-885d-46f8-b8dc-11c3b9f5107c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="25268cc4-2331-4b42-6e2e-253f1321472c" executionId="0b806418-2183-4a20-be86-c489e4a4af88" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8df863f7-106e-a0cc-68d6-8c1b218672de" executionId="dad411ac-5748-4b36-9b6e-d00b18d07857" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="456c0c5d-6ac4-1d6b-6eb9-72316753626d" executionId="049bedef-a4d1-4edf-ba51-4eccb558103c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="76fca776-d188-5e5b-424c-b6474647944b" executionId="20bc4201-4ed8-4e8b-ae17-0d1753c77f4c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1215759f-148f-b0ce-aa3a-7f8159689cd3" executionId="be9a09ba-cb31-4536-820b-10432d3b97b2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ff5e5f96-507f-039b-7f9b-cd009602695e" executionId="7b5423f5-6247-4717-9735-e3f74239f4f2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="be96645d-9b41-d8c5-a5db-1a2ccfa572d3" executionId="7793e271-41b6-4d37-8989-8bc41b9b242f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3bf2ba75-2137-7683-a1f6-61f019b64298" executionId="fa088425-2c2b-4228-93ca-2f71d21aa27f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e78bc9b7-e63f-4761-fcbd-f5cec6e2cb67" executionId="9a70dc28-bfad-4212-ad01-a665d789a84d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="78eb5c3b-21b8-1075-176f-da279c6b7d47" executionId="e953da6c-a75d-4812-9b62-653890f0e79c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0ba7ced5-bd74-a29e-fc6b-7c8b96298ea6" executionId="75f8edc0-6aee-46be-9355-5f5e40c1aac4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9a214682-8af3-eeab-92f0-cce86781cbc9" executionId="3aca4898-bc77-4afd-b9a1-00509312cd3a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="31e0ae49-8bf7-1f42-0ff2-e269177abd3f" executionId="16e5ad9a-8fd4-4670-80ca-9ff5e090439c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8dc072b0-e1eb-b3cb-5750-66d1038684a6" executionId="17b1a6f8-520e-4132-81ce-9fe0fe22465d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b804ce67-e9a3-25cc-44e4-c4a2d9f41176" executionId="d22569f6-a532-4215-8216-387925271670" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a0f3cbb1-e40c-a933-01bb-aaf3da9f7545" executionId="211e40b5-c15f-4560-a604-57bce91687eb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bc3e19fe-1115-8b55-6559-057d96f323b5" executionId="0a37ab7a-db86-4f8a-a77d-7b7e52673376" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2adc1479-a6e0-39fb-afa7-ca0a917896f9" executionId="4eb40d2b-058b-4c59-8138-5a816686e127" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="153986f3-0ca3-73e8-62d7-f701648188ef" executionId="17d44580-b52b-4a25-aa64-8ddbc7376ad7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ef645ed0-dc55-40d0-80c9-d8a473694566" executionId="570505a6-20d8-42c0-8b28-cfceec89025a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dae26ae9-2d4f-e557-f9b8-a98b3e9079c3" executionId="ab4e1180-bf71-4892-bf3b-7e7fadf5b5ce" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5b1b400f-13b7-e800-1d98-5474afcd5fdf" executionId="41e95650-8af5-4d8d-9397-c234cb922b79" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a4dbf1e2-be50-f782-4272-afbc0816679f" executionId="4845f478-2a49-40c3-804c-b0988a137199" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5f51b311-9af7-a8e2-3164-d3c1c249f2f7" executionId="b4e1d449-be27-473e-8027-9eaad7068c8c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d1c3599f-a00b-2ee4-a24b-9b1b1abcec53" executionId="8d353f54-9779-4fc7-8213-9c4983c99ed2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a41408ab-7edf-d9b7-1677-9198f172d9ef" executionId="5fc05d80-c3e5-423f-898f-2b81af6f8d49" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="20a8d501-604a-4346-0163-a2c3d0cec3cd" executionId="9f878afc-2b66-422c-a146-ea4ac2b2b6e9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cd6ad22a-ddc8-bc45-9606-3cec679a381f" executionId="88ec9db9-d42d-4e68-8cdd-6e3e9d3ce0cf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c15f362e-12b9-20b1-e826-6d4af9cf7b8c" executionId="4ca76db0-a158-46ac-a84f-c18e075601fc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="840e3fd5-73f9-fa17-34c6-710f5dcbc729" executionId="23634744-2476-45f9-9818-197fae7b4d24" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d1f0120b-5502-9f65-49ed-f68406757428" executionId="b3de97b8-e780-4d9f-bae6-685c6e93c56a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="735b64af-ca63-0bcc-4a1e-cf249ef1718f" executionId="01ff505b-8f36-4925-8e0f-8f4c9edd1296" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="842a23f3-23fb-d065-1b19-d30b3ae23942" executionId="f0a60ac4-e76d-4deb-bbf1-93116dad33ea" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3acc0d28-b75f-7d08-aae6-3d20d3141069" executionId="20399819-6ce9-4f10-abdf-7e09469702de" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0b201a28-da98-8e84-96e4-b084fc20b739" executionId="5bf5be7e-7165-42e2-993a-0173046df76d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="81a6a250-9cf2-f8fa-9aaa-63e8ddcff113" executionId="71cb9069-697d-464b-92f1-ff6415673e34" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c755e6e7-7466-5864-0d02-717f21c7f519" executionId="3103e79e-5f3d-48d3-83ae-918d7ad624bf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Resultados que não estão em uma lista" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="Todos os resultados carregados" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="46" executed="46" passed="33" failed="13" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>NUnit Adapter 5.1.0.0: Test execution started&#xD;
Running all tests in D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll&#xD;
   NUnit3TestExecutor discovered 46 of 46 NUnit test cases using Current Discovery mode, Non-Explicit run&#xD;
BusinessState - ValidatePhase executed.&#xD;
BusinessState - ConfigurePhase executed.&#xD;
BusinessState - ExecutePhase executed.&#xD;
BusinessState - CleanupPhase executed.&#xD;
BusinessState test completed - all phases executed in correct order&#xD;
&#xD;
Cancellation state flow: BusinessState-Validate → CancelledState → CompletedState&#xD;
Cancellation state transition test completed - correct flow verified&#xD;
&#xD;
Business phase handler - simulating cancellation.&#xD;
CancelledState handler executed.&#xD;
CompletedState handler executed after cancellation.&#xD;
CancelledState test completed - cancellation flow executed correctly&#xD;
&#xD;
CleanupPhase cancellation flow: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
CleanupPhase cancellation test completed - core phases succeeded, cleanup cancelled but still goes to SucceedState&#xD;
&#xD;
CleanupPhase cancellation flow (event-scoped): BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
CleanupPhase cancellation test (event-scoped) completed - core phases succeeded, cleanup cancelled but still goes to SucceedState&#xD;
&#xD;
Business phase handler executed.&#xD;
SucceedState handler executed.&#xD;
CompletedState handler executed.&#xD;
CompletedState test completed - completion handlers executed as final step&#xD;
&#xD;
ConfigurePhase cancellation flow: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
ConfigurePhase cancellation test completed - direct transition to CancelledState&#xD;
&#xD;
[ConfigurePhase] Handler returned WAITING, _waitingHandlers before increment: 0&#xD;
[ConfigurePhase] _waitingHandlers after increment: 1&#xD;
[ConfigurePhase] Entering WAITING state&#xD;
&#xD;
[BusinessState] Resume() called, _currentPhase: ConfigurePhaseState&#xD;
[BusinessState] Calling Resume() on phase: ConfigurePhaseState&#xD;
[ConfigurePhase] Resume() called, _waitingHandlers before decrement: 0&#xD;
[ConfigurePhase] _waitingHandlers after decrement: -1&#xD;
[ConfigurePhase] Still waiting for more handlers: -1&#xD;
[BusinessState] Resume() returned: LSEventBusinessState, StateResult: WAITING&#xD;
[ConfigurePhase] Handler returned WAITING, _waitingHandlers before increment: -1&#xD;
[ConfigurePhase] _waitingHandlers after increment: 0&#xD;
[ConfigurePhase] Pseudo-sequential detected, treating as SUCCESS and continuing&#xD;
&#xD;
ExecutePhase cancellation flow: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
ExecutePhase cancellation test completed - direct transition to CancelledState&#xD;
&#xD;
[BusinessState] Resume() called, _currentPhase: ExecutePhaseState&#xD;
[BusinessState] Calling Resume() on phase: ExecutePhaseState&#xD;
[BusinessState] Resume() returned: LSEventBusinessState, StateResult: WAITING&#xD;
&#xD;
Failure state flow: BusinessState-Validate → CompletedState&#xD;
Failure state transition test completed - ValidatePhase failure skips all remaining phases&#xD;
&#xD;
Mixed global/event-scoped cancellation flow: Global-ValidatePhase → EventScoped-ConfigurePhase → EventScoped-CancelledState → Global-CancelledState → EventScoped-CompletedState → Global-CompletedState&#xD;
Mixed global and event-scoped cancellation test completed - both handler types executed&#xD;
&#xD;
ValidatePhase cancellation: BusinessState-Validate → CancelledState → CompletedState&#xD;
ConfigurePhase cancellation: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
ExecutePhase cancellation: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
CleanupPhase cancellation: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
Multiple events cancellation test completed:&#xD;
  Validate: BusinessState-Validate → CancelledState → CompletedState&#xD;
  Configure: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
  Execute: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
  Cleanup: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
&#xD;
BusinessState-Validate executed&#xD;
BusinessState-Execute executed&#xD;
SucceedState executed&#xD;
CompletedState executed&#xD;
Full state flow: BusinessState-Validate → BusinessState-Execute → SucceedState → CompletedState&#xD;
BusinessState index: 0, SucceedState index: 2, CompletedState index: 3&#xD;
State transition flow: BusinessState-Validate → BusinessState-Execute → SucceedState → CompletedState&#xD;
State transition test completed - correct flow verified&#xD;
&#xD;
Business phase handler executed.&#xD;
SucceedState handler executed.&#xD;
SucceedState test completed - success handlers executed after business phases&#xD;
&#xD;
ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
Test completed&#xD;
&#xD;
User created.&#xD;
ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
User registration event dispatched.&#xD;
ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
Another user registration event dispatched.&#xD;
Test completed&#xD;
&#xD;
User created.&#xD;
EVENT-SCOPED ValidatePhase handler executed.&#xD;
GLOBAL ValidatePhase handler executed.&#xD;
EVENT-SCOPED ConfigurePhase handler executed.&#xD;
GLOBAL ConfigurePhase handler executed.&#xD;
EVENT-SCOPED ExecutePhase handler executed.&#xD;
GLOBAL ExecutePhase handler executed.&#xD;
EVENT-SCOPED CleanupPhase handler executed.&#xD;
GLOBAL CleanupPhase handler executed.&#xD;
User registration event with both global and event-scoped handlers dispatched.&#xD;
Handlers executed in order: EVENT_ValidatePhase, GLOBAL_ValidatePhase, EVENT_ConfigurePhase, GLOBAL_ConfigurePhase, EVENT_ExecutePhase, GLOBAL_ExecutePhase, EVENT_CleanupPhase, GLOBAL_CleanupPhase&#xD;
Test completed - both global and event-scoped handlers worked together&#xD;
&#xD;
ValidatePhase cancellation flow: BusinessState-Validate → CancelledState → CompletedState&#xD;
ValidatePhase cancellation test completed - direct transition to CancelledState&#xD;
&#xD;
ValidatePhase cancellation flow (event-scoped): BusinessState-Validate → CancelledState → CompletedState&#xD;
ValidatePhase cancellation test (event-scoped) completed - direct transition to CancelledState&#xD;
&#xD;
Sub context: subContext&#xD;
Sub context children: handler1&#xD;
Root context before merge: root&#xD;
Root children before: &#xD;
Merged context: root&#xD;
Merged children: subContext&#xD;
&#xD;
NUnit Adapter 5.1.0.0: Test execution complete&#xD;
</StdOut>
    </Output>
  </ResultSummary>
</TestRun>