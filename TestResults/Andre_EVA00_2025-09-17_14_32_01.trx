<?xml version="1.0" encoding="utf-8"?>
<TestRun id="5e7d1b58-7a01-442a-83a3-c7e2d2f1bbb1" name="Andre@EVA00 2025-09-17 14:32:01" runUser="EVA00\Andre" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2025-09-17T14:32:01.5187209-03:00" queuing="2025-09-17T14:32:01.5187212-03:00" start="2025-09-17T14:32:00.3102160-03:00" finish="2025-09-17T14:32:01.5966778-03:00" />
  <TestSettings name="default" id="bf79934b-5de9-47c0-b755-55313ed5e353">
    <Deployment runDeploymentRoot="Andre_EVA00_2025-09-17_14_32_01" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="155228ab-ecd2-4d14-a4c2-96aa8334b18f" testId="a41408ab-7edf-d9b7-1677-9198f172d9ef" testName="TestUserRegistrationForEventWithGlobalPhaseHandler" computerName="EVA00" duration="00:00:00.0017500" startTime="2025-09-17T14:32:01.4238024-03:00" endTime="2025-09-17T14:32:01.4255522-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="155228ab-ecd2-4d14-a4c2-96aa8334b18f">
      <Output>
        <StdOut>User created.&#xD;
ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
User registration event dispatched.&#xD;
ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
Another user registration event dispatched.&#xD;
Test completed</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b3e29ee7-83f9-489b-a695-fd4982fb3dfa" testId="ff5e5f96-507f-039b-7f9b-cd009602695e" testName="TestCancelledStateHandlers" computerName="EVA00" duration="00:00:00.0012860" startTime="2025-09-17T14:32:01.3270389-03:00" endTime="2025-09-17T14:32:01.3283249-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b3e29ee7-83f9-489b-a695-fd4982fb3dfa">
      <Output>
        <StdOut>Business phase handler - simulating cancellation.&#xD;
CancelledState handler executed.&#xD;
CompletedState handler executed after cancellation.&#xD;
CancelledState test completed - cancellation flow executed correctly</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f6ab53c2-ce8c-41de-aae7-53e2da6410ce" testId="450a2d8a-9137-f52c-ce1c-1c6b766575a2" testName="TestBuilderNestedStructure" computerName="EVA00" duration="00:00:00.0021610" startTime="2025-09-17T14:32:01.4686293-03:00" endTime="2025-09-17T14:32:01.4707905-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f6ab53c2-ce8c-41de-aae7-53e2da6410ce" />
    <UnitTestResult executionId="3f81d32f-6c1b-4851-bfe9-b28c6021fcc0" testId="be96645d-9b41-d8c5-a5db-1a2ccfa572d3" testName="TestExecutePhaseMultipleParallelWaiting" computerName="EVA00" duration="00:00:00.0040260" startTime="2025-09-17T14:32:01.3940122-03:00" endTime="2025-09-17T14:32:01.3980380-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3f81d32f-6c1b-4851-bfe9-b28c6021fcc0">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder[0], Is.EqualTo("Handler1_Waiting"))&#xD;
  String lengths are both 16. Strings differ at index 7.&#xD;
  Expected: "Handler1_Waiting"&#xD;
  But was:  "Handler3_Waiting"&#xD;
  ------------------^&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseMultipleParallelWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1490&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseMultipleParallelWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1490&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dbd3b6fb-e4a2-4d91-a742-0169ff538c3d" testId="c15f362e-12b9-20b1-e826-6d4af9cf7b8c" testName="TestMergeWithoutCurrentNode" computerName="EVA00" duration="00:00:00.0007480" startTime="2025-09-17T14:32:01.4890599-03:00" endTime="2025-09-17T14:32:01.4898078-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dbd3b6fb-e4a2-4d91-a742-0169ff538c3d">
      <Output>
        <ErrorInfo>
          <Message>LSUtils.LSException : No current node to build. Make sure to end all layers.</Message>
          <StackTrace>   at LSUtils.EventSystem.LSEventContextBuilder.Build() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventContextBuilder.cs:line 216&#xD;
   at LSUtils.EventSystem.TestV5.LSEventSystemTestsV5.TestMergeWithoutCurrentNode() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventSystem_v5_tests.cs:line 450&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7c880f5b-4768-4572-ae49-007e4635f089" testId="153986f3-0ca3-73e8-62d7-f701648188ef" testName="TestConfigurePhaseCancellation" computerName="EVA00" duration="00:00:00.0026189" startTime="2025-09-17T14:32:01.3795608-03:00" endTime="2025-09-17T14:32:01.3821799-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7c880f5b-4768-4572-ae49-007e4635f089">
      <Output>
        <StdOut>ConfigurePhase cancellation flow: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
ConfigurePhase cancellation test completed - direct transition to CancelledState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e6886beb-6a57-4a5c-ae75-71e50be2f0e4" testId="31e0ae49-8bf7-1f42-0ff2-e269177abd3f" testName="TestUserRegistrationForEventWithEventScopedHandler" computerName="EVA00" duration="00:00:00.0047070" startTime="2025-09-17T14:32:01.4190793-03:00" endTime="2025-09-17T14:32:01.4237863-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e6886beb-6a57-4a5c-ae75-71e50be2f0e4">
      <Output>
        <StdOut>ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
Test completed</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c0f21848-3785-4540-b088-dd414ccbf7dc" testId="5f51b311-9af7-a8e2-3164-d3c1c249f2f7" testName="TestConfigurePhaseSequentialWaiting" computerName="EVA00" duration="00:00:00.0039309" startTime="2025-09-17T14:32:01.3822115-03:00" endTime="2025-09-17T14:32:01.3861427-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c0f21848-3785-4540-b088-dd414ccbf7dc">
      <Output>
        <StdOut>[ConfigurePhase] Handler returned WAITING, _waitingHandlers before increment: 0&#xD;
[ConfigurePhase] _waitingHandlers after increment: 1&#xD;
[ConfigurePhase] Entering WAITING state</StdOut>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder.Count, Is.EqualTo(1))&#xD;
  Expected: 1&#xD;
  But was:  2&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestConfigurePhaseSequentialWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1339&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestConfigurePhaseSequentialWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1339&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="69a19b1d-2de5-4a2f-be39-4962aa89c980" testId="0ba7ced5-bd74-a29e-fc6b-7c8b96298ea6" testName="TestMergeNonConflictingNodes" computerName="EVA00" duration="00:00:00.0033160" startTime="2025-09-17T14:32:01.4835453-03:00" endTime="2025-09-17T14:32:01.4868611-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="69a19b1d-2de5-4a2f-be39-4962aa89c980">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(root, Is.Not.Null)&#xD;
  Expected: not null&#xD;
  But was:  null&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.TestV5.LSEventSystemTestsV5.TestMergeNonConflictingNodes() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventSystem_v5_tests.cs:line 265&#xD;

1)    at LSUtils.EventSystem.TestV5.LSEventSystemTestsV5.TestMergeNonConflictingNodes() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventSystem_v5_tests.cs:line 265&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="eaeda65c-69f4-48b2-ae41-27277bb717d4" testId="2adc1479-a6e0-39fb-afa7-ca0a917896f9" testName="TestDeepRecursiveMerge" computerName="EVA00" duration="00:00:00.0019740" startTime="2025-09-17T14:32:01.4746758-03:00" endTime="2025-09-17T14:32:01.4766494-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eaeda65c-69f4-48b2-ae41-27277bb717d4" />
    <UnitTestResult executionId="0890bc86-c12d-48ff-94a7-81989bfceb8a" testId="e78bc9b7-e63f-4761-fcbd-f5cec6e2cb67" testName="TestUserRegistrationWithGlobalAndEventScopedHandlers" computerName="EVA00" duration="00:00:00.0041100" startTime="2025-09-17T14:32:01.4255634-03:00" endTime="2025-09-17T14:32:01.4296733-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0890bc86-c12d-48ff-94a7-81989bfceb8a">
      <Output>
        <StdOut>User created.&#xD;
EVENT-SCOPED ValidatePhase handler executed.&#xD;
GLOBAL ValidatePhase handler executed.&#xD;
EVENT-SCOPED ConfigurePhase handler executed.&#xD;
GLOBAL ConfigurePhase handler executed.&#xD;
EVENT-SCOPED ExecutePhase handler executed.&#xD;
GLOBAL ExecutePhase handler executed.&#xD;
EVENT-SCOPED CleanupPhase handler executed.&#xD;
GLOBAL CleanupPhase handler executed.&#xD;
User registration event with both global and event-scoped handlers dispatched.&#xD;
Handlers executed in order: EVENT_ValidatePhase, GLOBAL_ValidatePhase, EVENT_ConfigurePhase, GLOBAL_ConfigurePhase, EVENT_ExecutePhase, GLOBAL_ExecutePhase, EVENT_CleanupPhase, GLOBAL_CleanupPhase&#xD;
Test completed - both global and event-scoped handlers worked together</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e9b0409b-dee6-46de-94be-363299519165" testId="9a214682-8af3-eeab-92f0-cce86781cbc9" testName="TestBuilderBasicSelector" computerName="EVA00" duration="00:00:00.0023120" startTime="2025-09-17T14:32:01.4556646-03:00" endTime="2025-09-17T14:32:01.4579763-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e9b0409b-dee6-46de-94be-363299519165" />
    <UnitTestResult executionId="4c8770c4-c58c-4228-acb4-c3dad705f7bd" testId="d1c3599f-a00b-2ee4-a24b-9b1b1abcec53" testName="TestWaitingBehaviorWithFail" computerName="EVA00" duration="00:00:00.0023090" startTime="2025-09-17T14:32:01.4379710-03:00" endTime="2025-09-17T14:32:01.4402798-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4c8770c4-c58c-4228-acb4-c3dad705f7bd">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder[0], Is.EqualTo("Handler1_Waiting"))&#xD;
  Expected string length 16 but was 17. Strings differ at index 7.&#xD;
  Expected: "Handler1_Waiting"&#xD;
  But was:  "Handler2_Executed"&#xD;
  ------------------^&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingBehaviorWithFail() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1647&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingBehaviorWithFail() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1647&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f3116f31-c0e4-4a64-a9e2-a166d0d815a6" testId="8c9812ca-7a53-2e36-f657-c2d157592732" testName="TestBuilderWithContext" computerName="EVA00" duration="00:00:00.0008360" startTime="2025-09-17T14:32:01.4708083-03:00" endTime="2025-09-17T14:32:01.4716445-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f3116f31-c0e4-4a64-a9e2-a166d0d815a6" />
    <UnitTestResult executionId="414eb4af-104d-4699-af3a-0a61c1aed7a0" testId="cd6ad22a-ddc8-bc45-9606-3cec679a381f" testName="TestValidatePhaseCancellation" computerName="EVA00" duration="00:00:00.0022440" startTime="2025-09-17T14:32:01.4296876-03:00" endTime="2025-09-17T14:32:01.4319319-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="414eb4af-104d-4699-af3a-0a61c1aed7a0">
      <Output>
        <StdOut>ValidatePhase cancellation flow: BusinessState-Validate → CancelledState → CompletedState&#xD;
ValidatePhase cancellation test completed - direct transition to CancelledState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="abd230a8-2379-4af6-8df5-1d93d688796a" testId="25268cc4-2331-4b42-6e2e-253f1321472c" testName="TestBuilderBasicParallel" computerName="EVA00" duration="00:00:00.0102310" startTime="2025-09-17T14:32:01.4454133-03:00" endTime="2025-09-17T14:32:01.4556436-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="abd230a8-2379-4af6-8df5-1d93d688796a" />
    <UnitTestResult executionId="72c3658c-5fe8-416d-b3fb-31a5ab5fc403" testId="4857dd68-607d-7f8e-9527-6869379fbefa" testName="TestSucceedStateHandlers" computerName="EVA00" duration="00:00:00.0011890" startTime="2025-09-17T14:32:01.4167979-03:00" endTime="2025-09-17T14:32:01.4179870-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="72c3658c-5fe8-416d-b3fb-31a5ab5fc403">
      <Output>
        <StdOut>Business phase handler executed.&#xD;
SucceedState handler executed.&#xD;
SucceedState test completed - success handlers executed after business phases</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c4f30822-66be-4f5c-ae6f-2a55407a4aaf" testId="20a8d501-604a-4346-0163-a2c3d0cec3cd" testName="TestCancellationStateTransitionFlow" computerName="EVA00" duration="00:00:00.0113560" startTime="2025-09-17T14:32:01.3156481-03:00" endTime="2025-09-17T14:32:01.3270036-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c4f30822-66be-4f5c-ae6f-2a55407a4aaf">
      <Output>
        <StdOut>Cancellation state flow: BusinessState-Validate → CancelledState → CompletedState&#xD;
Cancellation state transition test completed - correct flow verified</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="644b0fb6-754a-4420-bf4f-0db14d91410b" testId="1215759f-148f-b0ce-aa3a-7f8159689cd3" testName="TestValidatePhaseCancellationEventScoped" computerName="EVA00" duration="00:00:00.0024240" startTime="2025-09-17T14:32:01.4319556-03:00" endTime="2025-09-17T14:32:01.4343797-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="644b0fb6-754a-4420-bf4f-0db14d91410b">
      <Output>
        <StdOut>ValidatePhase cancellation flow (event-scoped): BusinessState-Validate → CancelledState → CompletedState&#xD;
ValidatePhase cancellation test (event-scoped) completed - direct transition to CancelledState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="88111f9b-0031-4c2f-992c-6bd7f8cd8d5d" testId="a0f3cbb1-e40c-a933-01bb-aaf3da9f7545" testName="TestMultipleEventsCancellationFlow" computerName="EVA00" duration="00:00:00.0049850" startTime="2025-09-17T14:32:01.4083933-03:00" endTime="2025-09-17T14:32:01.4133782-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="88111f9b-0031-4c2f-992c-6bd7f8cd8d5d">
      <Output>
        <StdOut>ValidatePhase cancellation: BusinessState-Validate → CancelledState → CompletedState&#xD;
ConfigurePhase cancellation: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
ExecutePhase cancellation: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
CleanupPhase cancellation: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
Multiple events cancellation test completed:&#xD;
  Validate: BusinessState-Validate → CancelledState → CompletedState&#xD;
  Configure: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
  Execute: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
  Cleanup: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="bc8368ac-d7b5-4045-b2f7-8a9b73a9a40d" testId="5b1b400f-13b7-e800-1d98-5474afcd5fdf" testName="TestFailureStateTransitionFlow" computerName="EVA00" duration="00:00:00.0015330" startTime="2025-09-17T14:32:01.4045657-03:00" endTime="2025-09-17T14:32:01.4060982-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bc8368ac-d7b5-4045-b2f7-8a9b73a9a40d">
      <Output>
        <StdOut>Failure state flow: BusinessState-Validate → CompletedState&#xD;
Failure state transition test completed - ValidatePhase failure skips all remaining phases</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4fae32e1-0990-4569-8eeb-7db5f764de82" testId="840e3fd5-73f9-fa17-34c6-710f5dcbc729" testName="TestUserInitialization" computerName="EVA00" duration="00:00:00.0005830" startTime="2025-09-17T14:32:01.4182719-03:00" endTime="2025-09-17T14:32:01.4188547-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4fae32e1-0990-4569-8eeb-7db5f764de82" />
    <UnitTestResult executionId="78e68008-7a07-43f6-bae2-50efa4f45db0" testId="81a6a250-9cf2-f8fa-9aaa-63e8ddcff113" testName="TestUserCreation" computerName="EVA00" duration="00:00:00.0002620" startTime="2025-09-17T14:32:01.4179995-03:00" endTime="2025-09-17T14:32:01.4182617-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="78e68008-7a07-43f6-bae2-50efa4f45db0" />
    <UnitTestResult executionId="194ccf61-b8c8-40ed-8f3a-e9e56e973b61" testId="d9fa7fdb-e6df-80fb-a520-46e9ce214564" testName="TestComplexHierarchyMerge" computerName="EVA00" duration="00:00:00.0027860" startTime="2025-09-17T14:32:01.4716561-03:00" endTime="2025-09-17T14:32:01.4744422-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="194ccf61-b8c8-40ed-8f3a-e9e56e973b61" />
    <UnitTestResult executionId="69cdbd21-5836-4638-bc87-d878dff88813" testId="0884c81d-70a4-0702-1114-6a3eca2c2e7d" testName="TestValidatePhaseWaitingCausesFailure" computerName="EVA00" duration="00:00:00.0012840" startTime="2025-09-17T14:32:01.4343922-03:00" endTime="2025-09-17T14:32:01.4356763-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="69cdbd21-5836-4638-bc87-d878dff88813">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(result, Is.EqualTo(EventProcessResult.FAILURE))&#xD;
  Expected: FAILURE&#xD;
  But was:  SUCCESS&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestValidatePhaseWaitingCausesFailure() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1258&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestValidatePhaseWaitingCausesFailure() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1258&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3457e6ef-483c-4956-b01a-36ad945d757f" testId="8df863f7-106e-a0cc-68d6-8c1b218672de" testName="TestMergeNullContext" computerName="EVA00" duration="00:00:00.0021260" startTime="2025-09-17T14:32:01.4869074-03:00" endTime="2025-09-17T14:32:01.4890329-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3457e6ef-483c-4956-b01a-36ad945d757f" />
    <UnitTestResult executionId="2f64c380-9444-49f1-bec0-e678519d6979" testId="3bf2ba75-2137-7683-a1f6-61f019b64298" testName="TestWaitingValidateFailure" computerName="EVA00" duration="00:00:00.0020400" startTime="2025-09-17T14:32:01.4402918-03:00" endTime="2025-09-17T14:32:01.4423315-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2f64c380-9444-49f1-bec0-e678519d6979">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(result, Is.EqualTo(EventProcessResult.FAILURE))&#xD;
  Expected: FAILURE&#xD;
  But was:  SUCCESS&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingValidateFailure() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1004&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingValidateFailure() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1004&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="47246cbc-6148-40da-8315-9614bb9fc012" testId="ed3d8703-6cf5-a3e7-978b-5fd79aa4d062" testName="TestBusinessStateProcessing" computerName="EVA00" duration="00:00:00.0474860" startTime="2025-09-17T14:32:01.2664069-03:00" endTime="2025-09-17T14:32:01.3138076-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="47246cbc-6148-40da-8315-9614bb9fc012">
      <Output>
        <StdOut>BusinessState - ValidatePhase executed.&#xD;
BusinessState - ConfigurePhase executed.&#xD;
BusinessState - ExecutePhase executed.&#xD;
BusinessState - CleanupPhase executed.&#xD;
BusinessState test completed - all phases executed in correct order</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ba0c5384-4252-48f9-bd24-3f49c95f263e" testId="c755e6e7-7466-5864-0d02-717f21c7f519" testName="TestBuilderBasicSequence" computerName="EVA00" duration="00:00:00.0020490" startTime="2025-09-17T14:32:01.4579882-03:00" endTime="2025-09-17T14:32:01.4600374-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ba0c5384-4252-48f9-bd24-3f49c95f263e" />
    <UnitTestResult executionId="b8246203-d80f-4b5f-9bcc-ed7fd988cad7" testId="a4dbf1e2-be50-f782-4272-afbc0816679f" testName="TestMixedNodeTypeMerge" computerName="EVA00" duration="00:00:00.0017340" startTime="2025-09-17T14:32:01.4898273-03:00" endTime="2025-09-17T14:32:01.4915615-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b8246203-d80f-4b5f-9bcc-ed7fd988cad7">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(container, Is.InstanceOf&lt;LSEventSelectorNode&gt;())&#xD;
  Expected: instance of &lt;LSUtils.EventSystem.LSEventSelectorNode&gt;&#xD;
  But was:  &lt;LSUtils.EventSystem.LSEventSequenceNode&gt;&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.TestV5.LSEventSystemTestsV5.TestMixedNodeTypeMerge() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventSystem_v5_tests.cs:line 378&#xD;

1)    at LSUtils.EventSystem.TestV5.LSEventSystemTestsV5.TestMixedNodeTypeMerge() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventSystem_v5_tests.cs:line 378&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d938f2d6-eb32-4279-8cbb-a28ec2aa2ea3" testId="3acc0d28-b75f-7d08-aae6-3d20d3141069" testName="TestCompletedStateHandlers" computerName="EVA00" duration="00:00:00.0015790" startTime="2025-09-17T14:32:01.3779699-03:00" endTime="2025-09-17T14:32:01.3795485-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d938f2d6-eb32-4279-8cbb-a28ec2aa2ea3">
      <Output>
        <StdOut>Business phase handler executed.&#xD;
SucceedState handler executed.&#xD;
CompletedState handler executed.&#xD;
CompletedState test completed - completion handlers executed as final step</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="37dd6f9a-8075-414f-8f1f-160c55ae2e97" testId="e3a074a6-0af1-e8d9-886d-5cdad1c2c783" testName="TestCleanupPhaseCancellation" computerName="EVA00" duration="00:00:00.0037350" startTime="2025-09-17T14:32:01.3283355-03:00" endTime="2025-09-17T14:32:01.3320702-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="37dd6f9a-8075-414f-8f1f-160c55ae2e97">
      <Output>
        <StdOut>CleanupPhase cancellation flow: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
CleanupPhase cancellation test completed - core phases succeeded, cleanup cancelled but still goes to SucceedState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f5f86056-c134-43a2-abfb-b3622d363a91" testId="735b64af-ca63-0bcc-4a1e-cf249ef1718f" testName="TestCleanupPhaseCancellationEventScoped" computerName="EVA00" duration="00:00:00.0037350" startTime="2025-09-17T14:32:01.3321228-03:00" endTime="2025-09-17T14:32:01.3358579-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f5f86056-c134-43a2-abfb-b3622d363a91">
      <Output>
        <StdOut>CleanupPhase cancellation flow (event-scoped): BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
CleanupPhase cancellation test (event-scoped) completed - core phases succeeded, cleanup cancelled but still goes to SucceedState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2bfd77d4-e8b1-4c49-bf15-55ca08f82318" testId="76fca776-d188-5e5b-424c-b6474647944b" testName="TestMergeHandlerReplacement" computerName="EVA00" duration="00:00:00.0050010" startTime="2025-09-17T14:32:01.4785167-03:00" endTime="2025-09-17T14:32:01.4835176-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2bfd77d4-e8b1-4c49-bf15-55ca08f82318">
      <Output>
        <ErrorInfo>
          <Message>LSUtils.LSException : No current context to merge the sub-layer into. Make sure to start with a layer node (Sequence, Selector, Parallel).</Message>
          <StackTrace>   at LSUtils.EventSystem.LSEventContextBuilder.Merge(ILSEventLayerNode subLayer, SubContextBuilder subContextBuilder) in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventContextBuilder.cs:line 165&#xD;
   at LSUtils.EventSystem.TestV5.LSEventSystemTestsV5.TestMergeHandlerReplacement() in D:\Projetos\LSUtils\src\LSEventSystem\v5\LSEventSystem_v5_tests.cs:line 294&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8bccb8b7-e6dd-4e29-9a01-30abc6c38341" testId="0b201a28-da98-8e84-96e4-b084fc20b739" testName="TestEventCreation" computerName="EVA00" duration="00:00:00.0017260" startTime="2025-09-17T14:32:01.4767661-03:00" endTime="2025-09-17T14:32:01.4784923-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8bccb8b7-e6dd-4e29-9a01-30abc6c38341" />
    <UnitTestResult executionId="eb0f2393-8eb6-4876-ab45-8280265ab567" testId="456c0c5d-6ac4-1d6b-6eb9-72316753626d" testName="TestWaitingBehaviorWithCancel" computerName="EVA00" duration="00:00:00.0022710" startTime="2025-09-17T14:32:01.4356882-03:00" endTime="2025-09-17T14:32:01.4379589-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eb0f2393-8eb6-4876-ab45-8280265ab567">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder[0], Is.EqualTo("Handler1_Waiting"))&#xD;
  Expected string length 16 but was 17. Strings differ at index 7.&#xD;
  Expected: "Handler1_Waiting"&#xD;
  But was:  "Handler2_Executed"&#xD;
  ------------------^&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingBehaviorWithCancel() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1590&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestWaitingBehaviorWithCancel() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1590&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2251ad77-bcfb-47e8-a8d0-1e6da661048d" testId="dae26ae9-2d4f-e557-f9b8-a98b3e9079c3" testName="TestExecutePhaseCancellation" computerName="EVA00" duration="00:00:00.0025510" startTime="2025-09-17T14:32:01.3914464-03:00" endTime="2025-09-17T14:32:01.3939973-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2251ad77-bcfb-47e8-a8d0-1e6da661048d">
      <Output>
        <StdOut>ExecutePhase cancellation flow: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
ExecutePhase cancellation test completed - direct transition to CancelledState</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="412e12e9-409b-43d9-bebe-6d56481171eb" testId="bc3e19fe-1115-8b55-6559-057d96f323b5" testName="TestUserRegistrationEvent" computerName="EVA00" duration="00:00:00.0002020" startTime="2025-09-17T14:32:01.4188661-03:00" endTime="2025-09-17T14:32:01.4190678-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="412e12e9-409b-43d9-bebe-6d56481171eb" />
    <UnitTestResult executionId="418372e4-4944-433e-8bf7-3d18c243658b" testId="d1f0120b-5502-9f65-49ed-f68406757428" testName="TestCleanupPhaseWaitingDoesNotAffectBusinessResult" computerName="EVA00" duration="00:00:00.0419900" startTime="2025-09-17T14:32:01.3358752-03:00" endTime="2025-09-17T14:32:01.3778646-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="418372e4-4944-433e-8bf7-3d18c243658b">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder, Is.EqualTo(new[] { "Validate_Success", "Execute_Success", "Cleanup_Waiting", "Cleanup_Success" }))&#xD;
  Expected is &lt;System.String[4]&gt;, actual is &lt;System.Collections.Generic.List`1[System.String]&gt; with 4 elements&#xD;
  Values differ at index [2]&#xD;
  String lengths are both 15. Strings differ at index 8.&#xD;
  Expected: &lt; "Validate_Success", "Execute_Success", "Cleanup_Waiting", "Cleanup_Success" &gt;&#xD;
  But was:  &lt; "Validate_Success", "Execute_Success", "Cleanup_Success", "Cleanup_Waiting" &gt;&#xD;
  First non-matching item at index [2]: "Cleanup_Waiting"&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestCleanupPhaseWaitingDoesNotAffectBusinessResult() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1546&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestCleanupPhaseWaitingDoesNotAffectBusinessResult() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1546&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dbd4fe32-2174-4bec-8aa8-16a3df9b0f18" testId="fbd3a990-6fa3-28ac-e959-ae600b2326f7" testName="TestExecutePhaseParallelWaiting" computerName="EVA00" duration="00:00:00.0024290" startTime="2025-09-17T14:32:01.3980552-03:00" endTime="2025-09-17T14:32:01.4004837-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dbd4fe32-2174-4bec-8aa8-16a3df9b0f18">
      <Output>
        <ErrorInfo>
          <Message>  Assert.That(executionOrder, Is.EqualTo(new[] { "Handler1_Waiting", "Handler2_Executed" }))&#xD;
  Expected is &lt;System.String[2]&gt;, actual is &lt;System.Collections.Generic.List`1[System.String]&gt; with 2 elements&#xD;
  Values differ at index [0]&#xD;
  Expected string length 16 but was 17. Strings differ at index 7.&#xD;
  Expected: &lt; "Handler1_Waiting", "Handler2_Executed" &gt;&#xD;
  But was:  &lt; "Handler2_Executed", "Handler1_Waiting" &gt;&#xD;
  First non-matching item at index [0]: "Handler1_Waiting"&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseParallelWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1435&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseParallelWaiting() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1435&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="655c7e6e-20cf-4caa-94bc-c8e5be16f89b" testId="8dc072b0-e1eb-b3cb-5750-66d1038684a6" testName="TestMixedGlobalAndEventScopedCancellation" computerName="EVA00" duration="00:00:00.0022730" startTime="2025-09-17T14:32:01.4061094-03:00" endTime="2025-09-17T14:32:01.4083820-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="655c7e6e-20cf-4caa-94bc-c8e5be16f89b">
      <Output>
        <StdOut>Mixed global/event-scoped cancellation flow: Global-ValidatePhase → EventScoped-ConfigurePhase → EventScoped-CancelledState → Global-CancelledState → EventScoped-CompletedState → Global-CompletedState&#xD;
Mixed global and event-scoped cancellation test completed - both handler types executed</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="483d6f2a-e903-4c37-b09e-55f3b9b8f590" testId="842a23f3-23fb-d065-1b19-d30b3ae23942" testName="TestBuilderMergeIntoContext" computerName="EVA00" duration="00:00:00.0085600" startTime="2025-09-17T14:32:01.4600494-03:00" endTime="2025-09-17T14:32:01.4686089-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="483d6f2a-e903-4c37-b09e-55f3b9b8f590">
      <Output>
        <StdOut>Sub context: subContext&#xD;
Sub context children: handler1&#xD;
Root context before merge: root&#xD;
Root children before: &#xD;
Merged context: root&#xD;
Merged children: subContext</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0c8df89b-0696-4be9-9488-60f0b397df51" testId="78eb5c3b-21b8-1075-176f-da279c6b7d47" testName="TestRemoveNonExistentNode" computerName="EVA00" duration="00:00:00.0014590" startTime="2025-09-17T14:32:01.4915857-03:00" endTime="2025-09-17T14:32:01.4930445-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0c8df89b-0696-4be9-9488-60f0b397df51" />
    <UnitTestResult executionId="5fe4e909-4025-4298-839e-5be8ade629fa" testId="b804ce67-e9a3-25cc-44e4-c4a2d9f41176" testName="TestConfigurePhaseSequentialWaiting_PseudoSequential" computerName="EVA00" duration="00:00:00.0051650" startTime="2025-09-17T14:32:01.3861755-03:00" endTime="2025-09-17T14:32:01.3913401-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5fe4e909-4025-4298-839e-5be8ade629fa">
      <Output>
        <StdOut>[BusinessState] Resume() called, _currentPhase: ConfigurePhaseState&#xD;
[BusinessState] Calling Resume() on phase: ConfigurePhaseState&#xD;
[ConfigurePhase] Resume() called, _waitingHandlers before decrement: 0&#xD;
[ConfigurePhase] _waitingHandlers after decrement: -1&#xD;
[ConfigurePhase] Still waiting for more handlers: -1&#xD;
[BusinessState] Resume() returned: LSEventBusinessState, StateResult: WAITING&#xD;
[ConfigurePhase] Handler returned WAITING, _waitingHandlers before increment: -1&#xD;
[ConfigurePhase] _waitingHandlers after increment: 0&#xD;
[ConfigurePhase] Pseudo-sequential detected, treating as SUCCESS and continuing</StdOut>
        <ErrorInfo>
          <Message>  Assert.That(result, Is.EqualTo(EventProcessResult.SUCCESS))&#xD;
  Expected: SUCCESS&#xD;
  But was:  WAITING&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestConfigurePhaseSequentialWaiting_PseudoSequential() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1298&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestConfigurePhaseSequentialWaiting_PseudoSequential() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1298&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5f982b53-2ae1-4236-ab9d-ad0b4f681e4a" testId="568773c1-35a4-921a-7508-a2bd76c88ad5" testName="TestStateTransitionFlow" computerName="EVA00" duration="00:00:00.0033320" startTime="2025-09-17T14:32:01.4134114-03:00" endTime="2025-09-17T14:32:01.4167436-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5f982b53-2ae1-4236-ab9d-ad0b4f681e4a">
      <Output>
        <StdOut>BusinessState-Validate executed&#xD;
BusinessState-Execute executed&#xD;
SucceedState executed&#xD;
CompletedState executed&#xD;
Full state flow: BusinessState-Validate → BusinessState-Execute → SucceedState → CompletedState&#xD;
BusinessState index: 0, SucceedState index: 2, CompletedState index: 3&#xD;
State transition flow: BusinessState-Validate → BusinessState-Execute → SucceedState → CompletedState&#xD;
State transition test completed - correct flow verified</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="acedbbf9-3d06-457b-9679-a70724a0d010" testId="ef645ed0-dc55-40d0-80c9-d8a473694566" testName="TestExecutePhaseParallelWaiting_PseudoSequential" computerName="EVA00" duration="00:00:00.0040510" startTime="2025-09-17T14:32:01.4005011-03:00" endTime="2025-09-17T14:32:01.4045522-03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="acedbbf9-3d06-457b-9679-a70724a0d010">
      <Output>
        <StdOut>[BusinessState] Resume() called, _currentPhase: ExecutePhaseState&#xD;
[BusinessState] Calling Resume() on phase: ExecutePhaseState&#xD;
[BusinessState] Resume() returned: LSEventBusinessState, StateResult: WAITING</StdOut>
        <ErrorInfo>
          <Message>  Assert.That(result, Is.EqualTo(EventProcessResult.SUCCESS))&#xD;
  Expected: SUCCESS&#xD;
  But was:  WAITING&#xD;
</Message>
          <StackTrace>   at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseParallelWaiting_PseudoSequential() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1389&#xD;

1)    at LSUtils.EventSystem.Tests.LSEventSystemTests.TestExecutePhaseParallelWaiting_PseudoSequential() in D:\Projetos\LSUtils\src\LSEventSystem\LSEventSystemTests.cs:line 1389&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="TestConfigurePhaseSequentialWaiting" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="5f51b311-9af7-a8e2-3164-d3c1c249f2f7">
      <Execution id="c0f21848-3785-4540-b088-dd414ccbf7dc" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestConfigurePhaseSequentialWaiting" />
    </UnitTest>
    <UnitTest name="TestMergeHandlerReplacement" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="76fca776-d188-5e5b-424c-b6474647944b">
      <Execution id="2bfd77d4-e8b1-4c49-bf15-55ca08f82318" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestMergeHandlerReplacement" />
    </UnitTest>
    <UnitTest name="TestCleanupPhaseWaitingDoesNotAffectBusinessResult" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="d1f0120b-5502-9f65-49ed-f68406757428">
      <Execution id="418372e4-4944-433e-8bf7-3d18c243658b" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCleanupPhaseWaitingDoesNotAffectBusinessResult" />
    </UnitTest>
    <UnitTest name="TestMergeWithoutCurrentNode" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="c15f362e-12b9-20b1-e826-6d4af9cf7b8c">
      <Execution id="dbd3b6fb-e4a2-4d91-a742-0169ff538c3d" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestMergeWithoutCurrentNode" />
    </UnitTest>
    <UnitTest name="TestBuilderBasicSelector" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="9a214682-8af3-eeab-92f0-cce86781cbc9">
      <Execution id="e9b0409b-dee6-46de-94be-363299519165" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderBasicSelector" />
    </UnitTest>
    <UnitTest name="TestMergeNonConflictingNodes" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="0ba7ced5-bd74-a29e-fc6b-7c8b96298ea6">
      <Execution id="69a19b1d-2de5-4a2f-be39-4962aa89c980" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestMergeNonConflictingNodes" />
    </UnitTest>
    <UnitTest name="TestExecutePhaseParallelWaiting" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="fbd3a990-6fa3-28ac-e959-ae600b2326f7">
      <Execution id="dbd4fe32-2174-4bec-8aa8-16a3df9b0f18" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestExecutePhaseParallelWaiting" />
    </UnitTest>
    <UnitTest name="TestUserRegistrationForEventWithEventScopedHandler" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="31e0ae49-8bf7-1f42-0ff2-e269177abd3f">
      <Execution id="e6886beb-6a57-4a5c-ae75-71e50be2f0e4" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserRegistrationForEventWithEventScopedHandler" />
    </UnitTest>
    <UnitTest name="TestUserRegistrationEvent" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="bc3e19fe-1115-8b55-6559-057d96f323b5">
      <Execution id="412e12e9-409b-43d9-bebe-6d56481171eb" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserRegistrationEvent" />
    </UnitTest>
    <UnitTest name="TestWaitingBehaviorWithCancel" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="456c0c5d-6ac4-1d6b-6eb9-72316753626d">
      <Execution id="eb0f2393-8eb6-4876-ab45-8280265ab567" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestWaitingBehaviorWithCancel" />
    </UnitTest>
    <UnitTest name="TestCompletedStateHandlers" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="3acc0d28-b75f-7d08-aae6-3d20d3141069">
      <Execution id="d938f2d6-eb32-4279-8cbb-a28ec2aa2ea3" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCompletedStateHandlers" />
    </UnitTest>
    <UnitTest name="TestValidatePhaseCancellation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="cd6ad22a-ddc8-bc45-9606-3cec679a381f">
      <Execution id="414eb4af-104d-4699-af3a-0a61c1aed7a0" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestValidatePhaseCancellation" />
    </UnitTest>
    <UnitTest name="TestBuilderBasicParallel" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="25268cc4-2331-4b42-6e2e-253f1321472c">
      <Execution id="abd230a8-2379-4af6-8df5-1d93d688796a" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderBasicParallel" />
    </UnitTest>
    <UnitTest name="TestConfigurePhaseSequentialWaiting_PseudoSequential" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="b804ce67-e9a3-25cc-44e4-c4a2d9f41176">
      <Execution id="5fe4e909-4025-4298-839e-5be8ade629fa" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestConfigurePhaseSequentialWaiting_PseudoSequential" />
    </UnitTest>
    <UnitTest name="TestCancelledStateHandlers" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="ff5e5f96-507f-039b-7f9b-cd009602695e">
      <Execution id="b3e29ee7-83f9-489b-a695-fd4982fb3dfa" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCancelledStateHandlers" />
    </UnitTest>
    <UnitTest name="TestUserRegistrationWithGlobalAndEventScopedHandlers" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="e78bc9b7-e63f-4761-fcbd-f5cec6e2cb67">
      <Execution id="0890bc86-c12d-48ff-94a7-81989bfceb8a" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserRegistrationWithGlobalAndEventScopedHandlers" />
    </UnitTest>
    <UnitTest name="TestDeepRecursiveMerge" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="2adc1479-a6e0-39fb-afa7-ca0a917896f9">
      <Execution id="eaeda65c-69f4-48b2-ae41-27277bb717d4" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestDeepRecursiveMerge" />
    </UnitTest>
    <UnitTest name="TestExecutePhaseMultipleParallelWaiting" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="be96645d-9b41-d8c5-a5db-1a2ccfa572d3">
      <Execution id="3f81d32f-6c1b-4851-bfe9-b28c6021fcc0" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestExecutePhaseMultipleParallelWaiting" />
    </UnitTest>
    <UnitTest name="TestValidatePhaseWaitingCausesFailure" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="0884c81d-70a4-0702-1114-6a3eca2c2e7d">
      <Execution id="69cdbd21-5836-4638-bc87-d878dff88813" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestValidatePhaseWaitingCausesFailure" />
    </UnitTest>
    <UnitTest name="TestExecutePhaseParallelWaiting_PseudoSequential" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="ef645ed0-dc55-40d0-80c9-d8a473694566">
      <Execution id="acedbbf9-3d06-457b-9679-a70724a0d010" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestExecutePhaseParallelWaiting_PseudoSequential" />
    </UnitTest>
    <UnitTest name="TestFailureStateTransitionFlow" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="5b1b400f-13b7-e800-1d98-5474afcd5fdf">
      <Execution id="bc8368ac-d7b5-4045-b2f7-8a9b73a9a40d" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestFailureStateTransitionFlow" />
    </UnitTest>
    <UnitTest name="TestEventCreation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="0b201a28-da98-8e84-96e4-b084fc20b739">
      <Execution id="8bccb8b7-e6dd-4e29-9a01-30abc6c38341" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestEventCreation" />
    </UnitTest>
    <UnitTest name="TestMultipleEventsCancellationFlow" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="a0f3cbb1-e40c-a933-01bb-aaf3da9f7545">
      <Execution id="88111f9b-0031-4c2f-992c-6bd7f8cd8d5d" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestMultipleEventsCancellationFlow" />
    </UnitTest>
    <UnitTest name="TestBuilderMergeIntoContext" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="842a23f3-23fb-d065-1b19-d30b3ae23942">
      <Execution id="483d6f2a-e903-4c37-b09e-55f3b9b8f590" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderMergeIntoContext" />
    </UnitTest>
    <UnitTest name="TestConfigurePhaseCancellation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="153986f3-0ca3-73e8-62d7-f701648188ef">
      <Execution id="7c880f5b-4768-4572-ae49-007e4635f089" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestConfigurePhaseCancellation" />
    </UnitTest>
    <UnitTest name="TestComplexHierarchyMerge" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="d9fa7fdb-e6df-80fb-a520-46e9ce214564">
      <Execution id="194ccf61-b8c8-40ed-8f3a-e9e56e973b61" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestComplexHierarchyMerge" />
    </UnitTest>
    <UnitTest name="TestBuilderNestedStructure" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="450a2d8a-9137-f52c-ce1c-1c6b766575a2">
      <Execution id="f6ab53c2-ce8c-41de-aae7-53e2da6410ce" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderNestedStructure" />
    </UnitTest>
    <UnitTest name="TestWaitingValidateFailure" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="3bf2ba75-2137-7683-a1f6-61f019b64298">
      <Execution id="2f64c380-9444-49f1-bec0-e678519d6979" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestWaitingValidateFailure" />
    </UnitTest>
    <UnitTest name="TestCleanupPhaseCancellationEventScoped" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="735b64af-ca63-0bcc-4a1e-cf249ef1718f">
      <Execution id="f5f86056-c134-43a2-abfb-b3622d363a91" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCleanupPhaseCancellationEventScoped" />
    </UnitTest>
    <UnitTest name="TestMergeNullContext" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="8df863f7-106e-a0cc-68d6-8c1b218672de">
      <Execution id="3457e6ef-483c-4956-b01a-36ad945d757f" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestMergeNullContext" />
    </UnitTest>
    <UnitTest name="TestWaitingBehaviorWithFail" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="d1c3599f-a00b-2ee4-a24b-9b1b1abcec53">
      <Execution id="4c8770c4-c58c-4228-acb4-c3dad705f7bd" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestWaitingBehaviorWithFail" />
    </UnitTest>
    <UnitTest name="TestStateTransitionFlow" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="568773c1-35a4-921a-7508-a2bd76c88ad5">
      <Execution id="5f982b53-2ae1-4236-ab9d-ad0b4f681e4a" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestStateTransitionFlow" />
    </UnitTest>
    <UnitTest name="TestBusinessStateProcessing" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="ed3d8703-6cf5-a3e7-978b-5fd79aa4d062">
      <Execution id="47246cbc-6148-40da-8315-9614bb9fc012" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestBusinessStateProcessing" />
    </UnitTest>
    <UnitTest name="TestBuilderWithContext" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="8c9812ca-7a53-2e36-f657-c2d157592732">
      <Execution id="f3116f31-c0e4-4a64-a9e2-a166d0d815a6" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderWithContext" />
    </UnitTest>
    <UnitTest name="TestRemoveNonExistentNode" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="78eb5c3b-21b8-1075-176f-da279c6b7d47">
      <Execution id="0c8df89b-0696-4be9-9488-60f0b397df51" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestRemoveNonExistentNode" />
    </UnitTest>
    <UnitTest name="TestUserCreation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="81a6a250-9cf2-f8fa-9aaa-63e8ddcff113">
      <Execution id="78e68008-7a07-43f6-bae2-50efa4f45db0" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserCreation" />
    </UnitTest>
    <UnitTest name="TestMixedGlobalAndEventScopedCancellation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="8dc072b0-e1eb-b3cb-5750-66d1038684a6">
      <Execution id="655c7e6e-20cf-4caa-94bc-c8e5be16f89b" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestMixedGlobalAndEventScopedCancellation" />
    </UnitTest>
    <UnitTest name="TestCleanupPhaseCancellation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="e3a074a6-0af1-e8d9-886d-5cdad1c2c783">
      <Execution id="37dd6f9a-8075-414f-8f1f-160c55ae2e97" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCleanupPhaseCancellation" />
    </UnitTest>
    <UnitTest name="TestExecutePhaseCancellation" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="dae26ae9-2d4f-e557-f9b8-a98b3e9079c3">
      <Execution id="2251ad77-bcfb-47e8-a8d0-1e6da661048d" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestExecutePhaseCancellation" />
    </UnitTest>
    <UnitTest name="TestValidatePhaseCancellationEventScoped" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="1215759f-148f-b0ce-aa3a-7f8159689cd3">
      <Execution id="644b0fb6-754a-4420-bf4f-0db14d91410b" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestValidatePhaseCancellationEventScoped" />
    </UnitTest>
    <UnitTest name="TestCancellationStateTransitionFlow" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="20a8d501-604a-4346-0163-a2c3d0cec3cd">
      <Execution id="c4f30822-66be-4f5c-ae6f-2a55407a4aaf" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestCancellationStateTransitionFlow" />
    </UnitTest>
    <UnitTest name="TestSucceedStateHandlers" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="4857dd68-607d-7f8e-9527-6869379fbefa">
      <Execution id="72c3658c-5fe8-416d-b3fb-31a5ab5fc403" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestSucceedStateHandlers" />
    </UnitTest>
    <UnitTest name="TestBuilderBasicSequence" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="c755e6e7-7466-5864-0d02-717f21c7f519">
      <Execution id="ba0c5384-4252-48f9-bd24-3f49c95f263e" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestBuilderBasicSequence" />
    </UnitTest>
    <UnitTest name="TestUserInitialization" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="840e3fd5-73f9-fa17-34c6-710f5dcbc729">
      <Execution id="4fae32e1-0990-4569-8eeb-7db5f764de82" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserInitialization" />
    </UnitTest>
    <UnitTest name="TestUserRegistrationForEventWithGlobalPhaseHandler" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="a41408ab-7edf-d9b7-1677-9198f172d9ef">
      <Execution id="155228ab-ecd2-4d14-a4c2-96aa8334b18f" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.Tests.LSEventSystemTests" name="TestUserRegistrationForEventWithGlobalPhaseHandler" />
    </UnitTest>
    <UnitTest name="TestMixedNodeTypeMerge" storage="d:\projetos\lsutils\bin\debug\net8.0\lsutils.dll" id="a4dbf1e2-be50-f782-4272-afbc0816679f">
      <Execution id="b8246203-d80f-4b5f-9bcc-ed7fd988cad7" />
      <TestMethod codeBase="D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll" adapterTypeName="executor://nunit3testexecutor/" className="LSUtils.EventSystem.TestV5.LSEventSystemTestsV5" name="TestMixedNodeTypeMerge" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="a41408ab-7edf-d9b7-1677-9198f172d9ef" executionId="155228ab-ecd2-4d14-a4c2-96aa8334b18f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ff5e5f96-507f-039b-7f9b-cd009602695e" executionId="b3e29ee7-83f9-489b-a695-fd4982fb3dfa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="450a2d8a-9137-f52c-ce1c-1c6b766575a2" executionId="f6ab53c2-ce8c-41de-aae7-53e2da6410ce" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="be96645d-9b41-d8c5-a5db-1a2ccfa572d3" executionId="3f81d32f-6c1b-4851-bfe9-b28c6021fcc0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c15f362e-12b9-20b1-e826-6d4af9cf7b8c" executionId="dbd3b6fb-e4a2-4d91-a742-0169ff538c3d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="153986f3-0ca3-73e8-62d7-f701648188ef" executionId="7c880f5b-4768-4572-ae49-007e4635f089" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="31e0ae49-8bf7-1f42-0ff2-e269177abd3f" executionId="e6886beb-6a57-4a5c-ae75-71e50be2f0e4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5f51b311-9af7-a8e2-3164-d3c1c249f2f7" executionId="c0f21848-3785-4540-b088-dd414ccbf7dc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0ba7ced5-bd74-a29e-fc6b-7c8b96298ea6" executionId="69a19b1d-2de5-4a2f-be39-4962aa89c980" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2adc1479-a6e0-39fb-afa7-ca0a917896f9" executionId="eaeda65c-69f4-48b2-ae41-27277bb717d4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e78bc9b7-e63f-4761-fcbd-f5cec6e2cb67" executionId="0890bc86-c12d-48ff-94a7-81989bfceb8a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9a214682-8af3-eeab-92f0-cce86781cbc9" executionId="e9b0409b-dee6-46de-94be-363299519165" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d1c3599f-a00b-2ee4-a24b-9b1b1abcec53" executionId="4c8770c4-c58c-4228-acb4-c3dad705f7bd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8c9812ca-7a53-2e36-f657-c2d157592732" executionId="f3116f31-c0e4-4a64-a9e2-a166d0d815a6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cd6ad22a-ddc8-bc45-9606-3cec679a381f" executionId="414eb4af-104d-4699-af3a-0a61c1aed7a0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="25268cc4-2331-4b42-6e2e-253f1321472c" executionId="abd230a8-2379-4af6-8df5-1d93d688796a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4857dd68-607d-7f8e-9527-6869379fbefa" executionId="72c3658c-5fe8-416d-b3fb-31a5ab5fc403" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="20a8d501-604a-4346-0163-a2c3d0cec3cd" executionId="c4f30822-66be-4f5c-ae6f-2a55407a4aaf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1215759f-148f-b0ce-aa3a-7f8159689cd3" executionId="644b0fb6-754a-4420-bf4f-0db14d91410b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a0f3cbb1-e40c-a933-01bb-aaf3da9f7545" executionId="88111f9b-0031-4c2f-992c-6bd7f8cd8d5d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5b1b400f-13b7-e800-1d98-5474afcd5fdf" executionId="bc8368ac-d7b5-4045-b2f7-8a9b73a9a40d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="840e3fd5-73f9-fa17-34c6-710f5dcbc729" executionId="4fae32e1-0990-4569-8eeb-7db5f764de82" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="81a6a250-9cf2-f8fa-9aaa-63e8ddcff113" executionId="78e68008-7a07-43f6-bae2-50efa4f45db0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d9fa7fdb-e6df-80fb-a520-46e9ce214564" executionId="194ccf61-b8c8-40ed-8f3a-e9e56e973b61" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0884c81d-70a4-0702-1114-6a3eca2c2e7d" executionId="69cdbd21-5836-4638-bc87-d878dff88813" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8df863f7-106e-a0cc-68d6-8c1b218672de" executionId="3457e6ef-483c-4956-b01a-36ad945d757f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3bf2ba75-2137-7683-a1f6-61f019b64298" executionId="2f64c380-9444-49f1-bec0-e678519d6979" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ed3d8703-6cf5-a3e7-978b-5fd79aa4d062" executionId="47246cbc-6148-40da-8315-9614bb9fc012" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c755e6e7-7466-5864-0d02-717f21c7f519" executionId="ba0c5384-4252-48f9-bd24-3f49c95f263e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a4dbf1e2-be50-f782-4272-afbc0816679f" executionId="b8246203-d80f-4b5f-9bcc-ed7fd988cad7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3acc0d28-b75f-7d08-aae6-3d20d3141069" executionId="d938f2d6-eb32-4279-8cbb-a28ec2aa2ea3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e3a074a6-0af1-e8d9-886d-5cdad1c2c783" executionId="37dd6f9a-8075-414f-8f1f-160c55ae2e97" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="735b64af-ca63-0bcc-4a1e-cf249ef1718f" executionId="f5f86056-c134-43a2-abfb-b3622d363a91" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="76fca776-d188-5e5b-424c-b6474647944b" executionId="2bfd77d4-e8b1-4c49-bf15-55ca08f82318" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0b201a28-da98-8e84-96e4-b084fc20b739" executionId="8bccb8b7-e6dd-4e29-9a01-30abc6c38341" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="456c0c5d-6ac4-1d6b-6eb9-72316753626d" executionId="eb0f2393-8eb6-4876-ab45-8280265ab567" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dae26ae9-2d4f-e557-f9b8-a98b3e9079c3" executionId="2251ad77-bcfb-47e8-a8d0-1e6da661048d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bc3e19fe-1115-8b55-6559-057d96f323b5" executionId="412e12e9-409b-43d9-bebe-6d56481171eb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d1f0120b-5502-9f65-49ed-f68406757428" executionId="418372e4-4944-433e-8bf7-3d18c243658b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fbd3a990-6fa3-28ac-e959-ae600b2326f7" executionId="dbd4fe32-2174-4bec-8aa8-16a3df9b0f18" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8dc072b0-e1eb-b3cb-5750-66d1038684a6" executionId="655c7e6e-20cf-4caa-94bc-c8e5be16f89b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="842a23f3-23fb-d065-1b19-d30b3ae23942" executionId="483d6f2a-e903-4c37-b09e-55f3b9b8f590" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="78eb5c3b-21b8-1075-176f-da279c6b7d47" executionId="0c8df89b-0696-4be9-9488-60f0b397df51" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b804ce67-e9a3-25cc-44e4-c4a2d9f41176" executionId="5fe4e909-4025-4298-839e-5be8ade629fa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="568773c1-35a4-921a-7508-a2bd76c88ad5" executionId="5f982b53-2ae1-4236-ab9d-ad0b4f681e4a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ef645ed0-dc55-40d0-80c9-d8a473694566" executionId="acedbbf9-3d06-457b-9679-a70724a0d010" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Resultados que não estão em uma lista" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="Todos os resultados carregados" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="46" executed="46" passed="32" failed="14" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>NUnit Adapter 5.1.0.0: Test execution started&#xD;
Running all tests in D:\Projetos\LSUtils\bin\Debug\net8.0\LSUtils.dll&#xD;
   NUnit3TestExecutor discovered 46 of 46 NUnit test cases using Current Discovery mode, Non-Explicit run&#xD;
BusinessState - ValidatePhase executed.&#xD;
BusinessState - ConfigurePhase executed.&#xD;
BusinessState - ExecutePhase executed.&#xD;
BusinessState - CleanupPhase executed.&#xD;
BusinessState test completed - all phases executed in correct order&#xD;
&#xD;
Cancellation state flow: BusinessState-Validate → CancelledState → CompletedState&#xD;
Cancellation state transition test completed - correct flow verified&#xD;
&#xD;
Business phase handler - simulating cancellation.&#xD;
CancelledState handler executed.&#xD;
CompletedState handler executed after cancellation.&#xD;
CancelledState test completed - cancellation flow executed correctly&#xD;
&#xD;
CleanupPhase cancellation flow: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
CleanupPhase cancellation test completed - core phases succeeded, cleanup cancelled but still goes to SucceedState&#xD;
&#xD;
CleanupPhase cancellation flow (event-scoped): BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
CleanupPhase cancellation test (event-scoped) completed - core phases succeeded, cleanup cancelled but still goes to SucceedState&#xD;
&#xD;
Business phase handler executed.&#xD;
SucceedState handler executed.&#xD;
CompletedState handler executed.&#xD;
CompletedState test completed - completion handlers executed as final step&#xD;
&#xD;
ConfigurePhase cancellation flow: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
ConfigurePhase cancellation test completed - direct transition to CancelledState&#xD;
&#xD;
[ConfigurePhase] Handler returned WAITING, _waitingHandlers before increment: 0&#xD;
[ConfigurePhase] _waitingHandlers after increment: 1&#xD;
[ConfigurePhase] Entering WAITING state&#xD;
&#xD;
[BusinessState] Resume() called, _currentPhase: ConfigurePhaseState&#xD;
[BusinessState] Calling Resume() on phase: ConfigurePhaseState&#xD;
[ConfigurePhase] Resume() called, _waitingHandlers before decrement: 0&#xD;
[ConfigurePhase] _waitingHandlers after decrement: -1&#xD;
[ConfigurePhase] Still waiting for more handlers: -1&#xD;
[BusinessState] Resume() returned: LSEventBusinessState, StateResult: WAITING&#xD;
[ConfigurePhase] Handler returned WAITING, _waitingHandlers before increment: -1&#xD;
[ConfigurePhase] _waitingHandlers after increment: 0&#xD;
[ConfigurePhase] Pseudo-sequential detected, treating as SUCCESS and continuing&#xD;
&#xD;
ExecutePhase cancellation flow: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
ExecutePhase cancellation test completed - direct transition to CancelledState&#xD;
&#xD;
[BusinessState] Resume() called, _currentPhase: ExecutePhaseState&#xD;
[BusinessState] Calling Resume() on phase: ExecutePhaseState&#xD;
[BusinessState] Resume() returned: LSEventBusinessState, StateResult: WAITING&#xD;
&#xD;
Failure state flow: BusinessState-Validate → CompletedState&#xD;
Failure state transition test completed - ValidatePhase failure skips all remaining phases&#xD;
&#xD;
Mixed global/event-scoped cancellation flow: Global-ValidatePhase → EventScoped-ConfigurePhase → EventScoped-CancelledState → Global-CancelledState → EventScoped-CompletedState → Global-CompletedState&#xD;
Mixed global and event-scoped cancellation test completed - both handler types executed&#xD;
&#xD;
ValidatePhase cancellation: BusinessState-Validate → CancelledState → CompletedState&#xD;
ConfigurePhase cancellation: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
ExecutePhase cancellation: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
CleanupPhase cancellation: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
Multiple events cancellation test completed:&#xD;
  Validate: BusinessState-Validate → CancelledState → CompletedState&#xD;
  Configure: BusinessState-Validate → BusinessState-Configure → CancelledState → CompletedState&#xD;
  Execute: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → CancelledState → CompletedState&#xD;
  Cleanup: BusinessState-Validate → BusinessState-Configure → BusinessState-Execute → BusinessState-Cleanup → SucceedState → CompletedState&#xD;
&#xD;
BusinessState-Validate executed&#xD;
BusinessState-Execute executed&#xD;
SucceedState executed&#xD;
CompletedState executed&#xD;
Full state flow: BusinessState-Validate → BusinessState-Execute → SucceedState → CompletedState&#xD;
BusinessState index: 0, SucceedState index: 2, CompletedState index: 3&#xD;
State transition flow: BusinessState-Validate → BusinessState-Execute → SucceedState → CompletedState&#xD;
State transition test completed - correct flow verified&#xD;
&#xD;
Business phase handler executed.&#xD;
SucceedState handler executed.&#xD;
SucceedState test completed - success handlers executed after business phases&#xD;
&#xD;
ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
Test completed&#xD;
&#xD;
User created.&#xD;
ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
User registration event dispatched.&#xD;
ValidatePhase handler executed.&#xD;
ConfigurePhase handler executed.&#xD;
ExecutePhase handler executed.&#xD;
CleanupPhase handler executed.&#xD;
Another user registration event dispatched.&#xD;
Test completed&#xD;
&#xD;
User created.&#xD;
EVENT-SCOPED ValidatePhase handler executed.&#xD;
GLOBAL ValidatePhase handler executed.&#xD;
EVENT-SCOPED ConfigurePhase handler executed.&#xD;
GLOBAL ConfigurePhase handler executed.&#xD;
EVENT-SCOPED ExecutePhase handler executed.&#xD;
GLOBAL ExecutePhase handler executed.&#xD;
EVENT-SCOPED CleanupPhase handler executed.&#xD;
GLOBAL CleanupPhase handler executed.&#xD;
User registration event with both global and event-scoped handlers dispatched.&#xD;
Handlers executed in order: EVENT_ValidatePhase, GLOBAL_ValidatePhase, EVENT_ConfigurePhase, GLOBAL_ConfigurePhase, EVENT_ExecutePhase, GLOBAL_ExecutePhase, EVENT_CleanupPhase, GLOBAL_CleanupPhase&#xD;
Test completed - both global and event-scoped handlers worked together&#xD;
&#xD;
ValidatePhase cancellation flow: BusinessState-Validate → CancelledState → CompletedState&#xD;
ValidatePhase cancellation test completed - direct transition to CancelledState&#xD;
&#xD;
ValidatePhase cancellation flow (event-scoped): BusinessState-Validate → CancelledState → CompletedState&#xD;
ValidatePhase cancellation test (event-scoped) completed - direct transition to CancelledState&#xD;
&#xD;
Sub context: subContext&#xD;
Sub context children: handler1&#xD;
Root context before merge: root&#xD;
Root children before: &#xD;
Merged context: root&#xD;
Merged children: subContext&#xD;
&#xD;
NUnit Adapter 5.1.0.0: Test execution complete&#xD;
</StdOut>
    </Output>
  </ResultSummary>
</TestRun>